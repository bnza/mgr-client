import {writeFileSync, mkdirSync} from 'fs';
import {dirname} from 'path';
import dotenv from 'dotenv';

dotenv.config();

const apiBaseUrl = process.env.NUXT_PUBLIC_API_BASE_URL;
if (!apiBaseUrl) {
  console.error("NUXT_PUBLIC_API_BASE_URL is not defined in your .env file.");
  process.exit(1);
}

const indexUrl = `${apiBaseUrl}/api/index.jsonld`;

console.log(`Fetching API index from: ${indexUrl}`);

try {
  // Fetch the API index
  const response = await fetch(indexUrl);

  if (!response.ok) {
    console.error(`HTTP error! status: ${response.status}`);
    process.exit(1);
  }

  const data = await response.json();

  // Extract entries that don't start with '@'
  const resourceEntries = Object.entries(data).filter(([key]) => !key.startsWith('@'));

  if (resourceEntries.length === 0) {
    console.warn("No resource entries found (all keys start with '@')");
    process.exit(0);
  }

  // Generate API_RESOURCE_MAP object
  const resourceMapEntries = resourceEntries
    .map(([key, value]) => `  ${key}: '${value}'`)
    .join(',\n');

  const tsContent = `// Auto-generated from API index at ${indexUrl}
// Do not edit this file manually

export const API_RESOURCE_MAP = {
${resourceMapEntries}
} as const

export type ApiResourceKey = keyof typeof API_RESOURCE_MAP
`;

  // Ensure directory exists
  const outputPath = './app/utils/consts/resources.ts';
  mkdirSync(dirname(outputPath), {recursive: true});

  // Write the file
  writeFileSync(outputPath, tsContent, 'utf8');

  console.log(`Generated ${outputPath} with ${resourceEntries.length} resource entries`);
  console.log('Resource keys:', resourceEntries.map(([key]) => key).join(', '));

} catch (error) {
  console.error('Error generating resource index types:', error.message);
  process.exit(1);
}
