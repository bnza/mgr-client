import type { ResourceConfig } from '~~/types'

const config: Readonly<ResourceConfig> = {
  apiPath: '/api/data/media_objects',
  appPath: '/data/media',
  defaultHeaders: [
    {
      key: 'id',
      value: 'id',
      title: 'ID',
      align: 'center',
      width: '200',
      maxWidth: '200',
    },
    {
      key: 'thumbnail',
      value: 'id',
      title: 'thumbnail',
      width: '100',
      minWidth: '100',
      maxWidth: '100',
      sortable: false,
    },
    {
      key: 'originalFilename',
      value: 'originalFilename',
      title: 'name',
      width: '300',
      minWidth: '300',
      maxWidth: '300',
    },
    {
      key: 'mimeType',
      value: 'mimeType',
      title: 'mime type',
      width: '150',
      minWidth: '150',
      maxWidth: '150',
    },
    {
      key: 'type.group',
      value: 'type',
      title: 'group',
      width: '150',
      minWidth: '150',
      maxWidth: '150',
    },
    {
      key: 'type.value',
      value: 'type',
      title: 'type',
      width: '150',
      minWidth: '150',
      maxWidth: '150',
    },
    {
      key: 'size',
      value: 'size',
      title: 'size',
      width: '100',
      minWidth: '100',
      maxWidth: '100',
    },
    {
      key: 'uploadDate',
      value: 'uploadDate',
      title: 'upload date',
      width: '200',
      minWidth: '200',
      maxWidth: '200',
    },
    {
      key: 'uploadedBy.email',
      value: 'uploadedBy.userIdentifier',
      title: 'uploaded by',
      width: '200',
      minWidth: '200',
      maxWidth: '200',
    },
    {
      key: 'description',
      value: 'description',
      title: 'description',
      minWidth: '300',
      maxWidth: '300',
      width: '300',
      sortable: false,
    },
  ],
  labels: ['media', 'media'],
  name: 'mediaObject',
}

export default config
