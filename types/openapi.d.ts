import type { Iri } from '~~/types'

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/vocabulary/analysis/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisType resources.
     * @description Retrieves the collection of AnalysisType resources.
     */
    get: operations['api_vocabularyanalysistypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/analysis/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisType resource.
     * @description Retrieves a AnalysisType resource.
     */
    get: operations['api_vocabularyanalysistypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datacontexts_get_collection']
    put?: never
    /**
     * Creates a Context resource.
     * @description Creates a Context resource.
     */
    post: operations['api_datacontexts_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Context resource.
     * @description Retrieves a Context resource.
     */
    get: operations['api_datacontexts_id_get']
    put?: never
    post?: never
    /**
     * Removes the Context resource.
     * @description Removes the Context resource.
     */
    delete: operations['api_datacontexts_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Context resource.
     * @description Updates the Context resource.
     */
    patch: operations['api_datacontexts_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datasites_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datacontext_samples_get_collection']
    put?: never
    /**
     * Creates a ContextSample resource.
     * @description Creates a ContextSample resource.
     */
    post: operations['api_datacontext_samples_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_samples/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextSample resource.
     * @description Retrieves a ContextSample resource.
     */
    get: operations['api_datacontext_samples_id_get']
    put?: never
    post?: never
    /**
     * Removes the ContextSample resource.
     * @description Removes the ContextSample resource.
     */
    delete: operations['api_datacontext_samples_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datacontexts_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datasamples_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontext_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a ContextStratigraphicUnit resource.
     * @description Creates a ContextStratigraphicUnit resource.
     */
    post: operations['api_datacontext_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextStratigraphicUnit resource.
     * @description Retrieves a ContextStratigraphicUnit resource.
     */
    get: operations['api_datacontext_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the ContextStratigraphicUnit resource.
     * @description Removes the ContextStratigraphicUnit resource.
     */
    delete: operations['api_datacontext_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontexts_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/context/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextType resources.
     * @description Retrieves the collection of ContextType resources.
     */
    get: operations['api_vocabularycontexttypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/context/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextType resource.
     * @description Retrieves a ContextType resource.
     */
    get: operations['api_vocabularycontexttypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of CulturalContext resources.
     * @description Retrieves the collection of CulturalContext resources.
     */
    get: operations['api_vocabularycultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/cultural_contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a CulturalContext resource.
     * @description Retrieves a CulturalContext resource.
     */
    get: operations['api_vocabularycultural_contexts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/decorations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Decoration resources.
     * @description Retrieves the collection of Decoration resources.
     */
    get: operations['api_vocabularypotterydecorations_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/decorations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Decoration resource.
     * @description Retrieves a Decoration resource.
     */
    get: operations['api_vocabularypotterydecorations_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_forms': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of FunctionalForm resources.
     * @description Retrieves the collection of FunctionalForm resources.
     */
    get: operations['api_vocabularypotteryfunctional_forms_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_forms/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a FunctionalForm resource.
     * @description Retrieves a FunctionalForm resource.
     */
    get: operations['api_vocabularypotteryfunctional_forms_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_groups': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of FunctionalGroup resources.
     * @description Retrieves the collection of FunctionalGroup resources.
     */
    get: operations['api_vocabularypotteryfunctional_groups_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_groups/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a FunctionalGroup resource.
     * @description Retrieves a FunctionalGroup resource.
     */
    get: operations['api_vocabularypotteryfunctional_groups_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a user token.
     * @description Creates a user token.
     */
    post: operations['login_check_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_objects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObject resources.
     * @description Retrieves the collection of MediaObject resources.
     */
    get: operations['api_datamedia_objects_get_collection']
    put?: never
    /**
     * Creates a MediaObject resource.
     * @description Creates a MediaObject resource.
     */
    post: operations['api_datamedia_objects_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_objects/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObject resource.
     * @description Retrieves a MediaObject resource.
     */
    get: operations['api_datamedia_objects_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_objects/{sha256}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObject resource.
     * @description Retrieves a MediaObject resource.
     */
    get: operations['api_datamedia_objects_sha256_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectStratigraphicUnit resources.
     * @description Retrieves the collection of MediaObjectStratigraphicUnit resources.
     */
    get: operations['api_datamedia_object_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a MediaObjectStratigraphicUnit resource.
     * @description Creates a MediaObjectStratigraphicUnit resource.
     */
    post: operations['api_datamedia_object_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObjectStratigraphicUnit resource.
     * @description Retrieves a MediaObjectStratigraphicUnit resource.
     */
    get: operations['api_datamedia_object_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the MediaObjectStratigraphicUnit resource.
     * @description Removes the MediaObjectStratigraphicUnit resource.
     */
    delete: operations['api_datamedia_object_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/media_objects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectStratigraphicUnit resources.
     * @description Retrieves the collection of MediaObjectStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdmedia_objects_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/media_object/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectType resources.
     * @description Retrieves the collection of MediaObjectType resources.
     */
    get: operations['api_vocabularymedia_objecttypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/media_object/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObjectType resource.
     * @description Retrieves a MediaObjectType resource.
     */
    get: operations['api_vocabularymedia_objecttypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Pottery resources.
     * @description Retrieves the collection of Pottery resources.
     */
    get: operations['api_datapotteries_get_collection']
    put?: never
    /**
     * Creates a Pottery resource.
     * @description Creates a Pottery resource.
     */
    post: operations['api_datapotteries_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/potteries/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Pottery resource.
     * @description Retrieves a Pottery resource.
     */
    get: operations['api_datapotteries_id_get']
    put?: never
    post?: never
    /**
     * Removes the Pottery resource.
     * @description Removes the Pottery resource.
     */
    delete: operations['api_datapotteries_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Pottery resource.
     * @description Updates the Pottery resource.
     */
    patch: operations['api_datapotteries_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Pottery resources.
     * @description Retrieves the collection of Pottery resources.
     */
    get: operations['api_datastratigraphic_units_parentIdpotteries_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of PotteryAnalysis resources.
     * @description Retrieves the collection of PotteryAnalysis resources.
     */
    get: operations['api_dataanalysespotteries_get_collection']
    put?: never
    /**
     * Creates a PotteryAnalysis resource.
     * @description Creates a PotteryAnalysis resource.
     */
    post: operations['api_dataanalysespotteries_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/potteries/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a PotteryAnalysis resource.
     * @description Retrieves a PotteryAnalysis resource.
     */
    get: operations['api_dataanalysespotteries_id_get']
    put?: never
    post?: never
    /**
     * Removes the PotteryAnalysis resource.
     * @description Removes the PotteryAnalysis resource.
     */
    delete: operations['api_dataanalysespotteries_id_delete']
    options?: never
    head?: never
    /**
     * Updates the PotteryAnalysis resource.
     * @description Updates the PotteryAnalysis resource.
     */
    patch: operations['api_dataanalysespotteries_id_patch']
    trace?: never
  }
  '/api/data/potteries/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of PotteryAnalysis resources.
     * @description Retrieves the collection of PotteryAnalysis resources.
     */
    get: operations['api_datapotteries_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/pottery_decorations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of PotteryDecoration resources.
     * @description Retrieves the collection of PotteryDecoration resources.
     */
    get: operations['api_datapottery_decorations_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/pottery_decorations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a PotteryDecoration resource.
     * @description Retrieves a PotteryDecoration resource.
     */
    get: operations['api_datapottery_decorations_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Sample resources.
     * @description Retrieves the collection of Sample resources.
     */
    get: operations['api_datasamples_get_collection']
    put?: never
    /**
     * Creates a Sample resource.
     * @description Creates a Sample resource.
     */
    post: operations['api_datasamples_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Sample resource.
     * @description Retrieves a Sample resource.
     */
    get: operations['api_datasamples_id_get']
    put?: never
    post?: never
    /**
     * Removes the Sample resource.
     * @description Removes the Sample resource.
     */
    delete: operations['api_datasamples_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Sample resource.
     * @description Updates the Sample resource.
     */
    patch: operations['api_datasamples_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Sample resources.
     * @description Retrieves the collection of Sample resources.
     */
    get: operations['api_datasites_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasample_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a SampleStratigraphicUnit resource.
     * @description Creates a SampleStratigraphicUnit resource.
     */
    post: operations['api_datasample_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SampleStratigraphicUnit resource.
     * @description Retrieves a SampleStratigraphicUnit resource.
     */
    get: operations['api_datasample_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the SampleStratigraphicUnit resource.
     * @description Removes the SampleStratigraphicUnit resource.
     */
    delete: operations['api_datasample_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasamples_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/sample/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleType resources.
     * @description Retrieves the collection of SampleType resources.
     */
    get: operations['api_vocabularysampletypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/sample/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SampleType resource.
     * @description Retrieves a SampleType resource.
     */
    get: operations['api_vocabularysampletypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/shapes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Shape resources.
     * @description Retrieves the collection of Shape resources.
     */
    get: operations['api_vocabularypotteryshapes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/shapes/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Shape resource.
     * @description Retrieves a Shape resource.
     */
    get: operations['api_vocabularypotteryshapes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Site resources.
     * @description Retrieves the collection of Site resources.
     */
    get: operations['api_datasites_get_collection']
    put?: never
    /**
     * Creates a Site resource.
     * @description Creates a Site resource.
     */
    post: operations['api_datasites_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Site resource.
     * @description Retrieves a Site resource.
     */
    get: operations['api_datasites_id_get']
    put?: never
    post?: never
    /**
     * Removes the Site resource.
     * @description Removes the Site resource.
     */
    delete: operations['api_datasites_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Site resource.
     * @description Updates the Site resource.
     */
    patch: operations['api_datasites_id_patch']
    trace?: never
  }
  '/api/data/site_cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteCulturalContext resources.
     * @description Retrieves the collection of SiteCulturalContext resources.
     */
    get: operations['api_datasite_cultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/site_cultural_contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteCulturalContext resource.
     * @description Retrieves a SiteCulturalContext resource.
     */
    get: operations['api_datasite_cultural_contexts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsite_user_privileges_get_collection']
    put?: never
    /**
     * Creates a SiteUserPrivilege resource.
     * @description Creates a SiteUserPrivilege resource.
     */
    post: operations['api_adminsite_user_privileges_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsite_user_privileges_id_get']
    put?: never
    post?: never
    /**
     * Removes the SiteUserPrivilege resource.
     * @description Removes the SiteUserPrivilege resource.
     */
    delete: operations['api_adminsite_user_privileges_id_delete']
    options?: never
    head?: never
    /**
     * Updates the SiteUserPrivilege resource.
     * @description Updates the SiteUserPrivilege resource.
     */
    patch: operations['api_adminsite_user_privileges_id_patch']
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusersmesite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datasites_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a StratigraphicUnit resource.
     * @description Creates a StratigraphicUnit resource.
     */
    post: operations['api_datastratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnit resource.
     * @description Retrieves a StratigraphicUnit resource.
     */
    get: operations['api_datastratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the StratigraphicUnit resource.
     * @description Removes the StratigraphicUnit resource.
     */
    delete: operations['api_datastratigraphic_units_id_delete']
    options?: never
    head?: never
    /**
     * Updates the StratigraphicUnit resource.
     * @description Updates the StratigraphicUnit resource.
     */
    patch: operations['api_datastratigraphic_units_id_patch']
    trace?: never
  }
  '/api/vocabulary/stratigraphic_unit/relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnitRelation resources.
     * @description Retrieves the collection of StratigraphicUnitRelation resources.
     */
    get: operations['api_vocabularystratigraphic_unitrelationships_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/stratigraphic_unit/relationships/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnitRelation resource.
     * @description Retrieves a StratigraphicUnitRelation resource.
     */
    get: operations['api_vocabularystratigraphic_unitrelationships_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_unit_relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnitRelationship resources.
     * @description Retrieves the collection of StratigraphicUnitRelationship resources.
     */
    get: operations['api_datastratigraphic_unit_relationships_get_collection']
    put?: never
    /**
     * Creates a StratigraphicUnitRelationship resource.
     * @description Creates a StratigraphicUnitRelationship resource.
     */
    post: operations['api_datastratigraphic_unit_relationships_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_unit_relationships/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnitRelationship resource.
     * @description Retrieves a StratigraphicUnitRelationship resource.
     */
    get: operations['api_datastratigraphic_unit_relationships_id_get']
    put?: never
    post?: never
    /**
     * Removes the StratigraphicUnitRelationship resource.
     * @description Removes the StratigraphicUnitRelationship resource.
     */
    delete: operations['api_datastratigraphic_unit_relationships_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnitRelationship resources.
     * @description Retrieves the collection of StratigraphicUnitRelationship resources.
     */
    get: operations['api_datastratigraphic_units_parentIdrelationships_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/surface_treatments': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SurfaceTreatment resources.
     * @description Retrieves the collection of SurfaceTreatment resources.
     */
    get: operations['api_vocabularypotterysurface_treatments_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/surface_treatments/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SurfaceTreatment resource.
     * @description Retrieves a SurfaceTreatment resource.
     */
    get: operations['api_vocabularypotterysurface_treatments_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/potteries/{pottery}/{type}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysespotteries_pottery_type_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/context_sample/{context}/{sample}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontext_sample_context_sample_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/context_stratigraphic_units/{context}/{stratigraphicUnit}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontext_stratigraphic_units_context_stratigraphicUnit_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/contexts/{site}/{name}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontexts_site_name_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/media_objects/stratigraphic_units/{mediaObject}/{item}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquemedia_objectsstratigraphic_units_mediaObject_item_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/potteries/inventory/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquepotteriesinventory_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sample_stratigraphic_units/{sample}/{stratigraphicUnit}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesample_stratigraphic_units_sample_stratigraphicUnit_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/samples/{site}/{type}/{year}/{number}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesamples_site_type_year_number_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/site_user_privileges/{site}/{user}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesite_user_privileges_site_user_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/code/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitescode_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/name/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitesname_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/stratigraphic_unit_relationships/{lftStratigraphicUnit}/{rgtStratigraphicUnit}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquestratigraphic_unit_relationships_lftStratigraphicUnit_rgtStratigraphicUnit_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/stratigraphic_units/{site}/{year}/{number}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquestratigraphic_units_site_year_number_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of User resources.
     * @description Retrieves the collection of User resources.
     */
    get: operations['api_adminusers_get_collection']
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusers_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusersmechange_password_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_adminusers_id_get']
    put?: never
    post?: never
    /**
     * Removes the User resource.
     * @description Removes the User resource.
     */
    delete: operations['api_adminusers_id_delete']
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_id_patch']
    trace?: never
  }
  '/api/admin/users/{id}/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_idchange_password_patch']
    trace?: never
  }
  '/api/users/me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_usersme_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooBone resources.
     * @description Retrieves the collection of VocZooBone resources.
     */
    get: operations['api_vocabularyzoobones_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bones/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooBone resource.
     * @description Retrieves a VocZooBone resource.
     */
    get: operations['api_vocabularyzoobones_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bone_parts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooBonePart resources.
     * @description Retrieves the collection of VocZooBonePart resources.
     */
    get: operations['api_vocabularyzoobone_parts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bone_parts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooBonePart resource.
     * @description Retrieves a VocZooBonePart resource.
     */
    get: operations['api_vocabularyzoobone_parts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/species': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooSpecies resources.
     * @description Retrieves the collection of VocZooSpecies resources.
     */
    get: operations['api_vocabularyzoospecies_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/species/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooSpecies resource.
     * @description Retrieves a VocZooSpecies resource.
     */
    get: operations['api_vocabularyzoospecies_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooBone resources.
     * @description Retrieves the collection of ZooBone resources.
     */
    get: operations['api_datastratigraphic_units_parentIdzoobones_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooBone resources.
     * @description Retrieves the collection of ZooBone resources.
     */
    get: operations['api_datazoobones_get_collection']
    put?: never
    /**
     * Creates a ZooBone resource.
     * @description Creates a ZooBone resource.
     */
    post: operations['api_datazoobones_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/bones/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ZooBone resource.
     * @description Retrieves a ZooBone resource.
     */
    get: operations['api_datazoobones_id_get']
    put?: never
    post?: never
    /**
     * Removes the ZooBone resource.
     * @description Removes the ZooBone resource.
     */
    delete: operations['api_datazoobones_id_delete']
    options?: never
    head?: never
    /**
     * Updates the ZooBone resource.
     * @description Updates the ZooBone resource.
     */
    patch: operations['api_datazoobones_id_patch']
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    'AnalysisType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      group?: string
      value?: string
    }
    /** @description Unprocessable entity */
    'ConstraintViolation-json': {
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    /** @description Unprocessable entity */
    'ConstraintViolation.jsonld-jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly description?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    'Context-context.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['ContextType-context.acl.read']
      site?: components['schemas']['Site-context.acl.read']
      name?: string
      description?: string | null
    }
    'Context-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      name?: string
      description?: string | null
    }
    'Context-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['ContextType-context_stratigraphic_unit.acl.read']
      site?: components['schemas']['Site-context_stratigraphic_unit.acl.read']
      name?: string
    }
    'Context-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['ContextType-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context.acl.read']
      site?: components['schemas']['Site.jsonld-context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      name: string
      description?: string | null
    }
    'Context.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_sample.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_sample.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_stratigraphic_unit.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.acl.read']
      name?: string
    }
    'Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'ContextSample-context_sample.acl.read': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample?: string
    }
    'ContextSample-context_sample.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      sample?: components['schemas']['Sample-context_sample.samples.acl.read_sample.acl.read']
    }
    'ContextSample.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample: string
    }
    'ContextSample.jsonld-context_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample?: string
    }
    'ContextSample.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_sample.contexts.acl.read_context.acl.read']
    }
    'ContextSample.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
      sample?: components['schemas']['Sample.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
    }
    'ContextSample.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-context_sample.samples.acl.read_sample.acl.read']
    }
    'ContextStratigraphicUnit-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-context_stratigraphic_unit.acl.read']
      context?: components['schemas']['Context-context_stratigraphic_unit.acl.read']
    }
    'ContextStratigraphicUnit-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly id?: number & string
      context?: components['schemas']['Context-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
    }
    'ContextStratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context: string
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'ContextType-context.acl.read': {
      group?: string
      value?: string
    }
    'ContextType-context_stratigraphic_unit.acl.read': {
      group?: string
      value?: string
    }
    'ContextType-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      group?: string
      value?: string
    }
    'ContextType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      group?: string
      value?: string
    }
    'ContextType.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'CulturalContext.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      id?: number
      value?: string
    }
    'Decoration.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    /** @description A representation of common errors. */
    Error: {
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string | null
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string | null
      /**
       * @default 400
       * @example 404
       */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
    }
    /** @description A representation of common errors. */
    'Error.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string | null
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string | null
      /**
       * @default 400
       * @example 404
       */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
      readonly description?: string | null
    }
    'FunctionalForm.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'FunctionalGroup.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'MediaObject.jsonld-media_object.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['MediaObjectType.jsonld-media_object.acl.read']
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
      description?: string | null
      readonly contentThumbnailUrl?: string | null
      dimensions?: string[] | null
    }
    'MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['MediaObjectType.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
      description?: string | null
      readonly contentThumbnailUrl?: string | null
      dimensions?: string[] | null
    }
    'MediaObject.jsonld-pottery_analysis.acl.read_media_object_join.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
    }
    'MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      item?: components['schemas']['StratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      mediaObject?: components['schemas']['MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      description?: string | null
    }
    'MediaObjectStratigraphicUnit.jsonld-media_object_join.create': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      item?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      mediaObject?: string
      description?: string | null
    }
    'MediaObjectType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      group?: string
      value?: string
    }
    'MediaObjectType.jsonld-media_object.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'MediaObjectType.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'Pottery-pottery.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-pottery.acl.read']
      inventory?: string
      decorations?: components['schemas']['PotteryDecoration-pottery.acl.read'][]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery-pottery.create': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit?: string
      inventory?: string
      decorations?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-pottery.acl.read']
      inventory?: string
      decorations?: components['schemas']['PotteryDecoration.jsonld-pottery.acl.read'][]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-pottery.create': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit?: string
      inventory?: string
      decorations?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-pottery_analysis.acl.read_media_object_join.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      inventory?: string
    }
    PotteryAnalysis: {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      pottery?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      document?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      rawData?: string | null
      summary?: string | null
    }
    'PotteryAnalysis.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      pottery: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      document?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      rawData?: string | null
      summary?: string | null
    }
    'PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      pottery?: components['schemas']['Pottery.jsonld-pottery_analysis.acl.read_media_object_join.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      document?:
        | components['schemas']['MediaObject.jsonld-pottery_analysis.acl.read_media_object_join.read']
        | null
      rawData?:
        | components['schemas']['MediaObject.jsonld-pottery_analysis.acl.read_media_object_join.read']
        | null
      summary?: string | null
    }
    'PotteryDecoration-pottery.acl.read': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    'PotteryDecoration.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      pottery?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    'PotteryDecoration.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    Sample: {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      sampleStratigraphicUnits?: string[]
      sampleContexts?: string[]
      description?: string | null
      readonly code?: string
    }
    'Sample-context_sample.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-context_sample.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType-context_sample.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample-sample.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample.acl.read']
      type?: components['schemas']['SampleType-sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      type?: components['schemas']['SampleType-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number: number
      sampleStratigraphicUnits?: string[]
      sampleContexts?: string[]
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
      type?: components['schemas']['SampleType.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_sample.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-context_sample.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      type?: components['schemas']['SampleType.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      sample?: components['schemas']['Sample-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      sample?: components['schemas']['Sample-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'SampleType-context_sample.samples.acl.read_sample.acl.read': {
      code?: string
      value?: string
    }
    'SampleType-sample.acl.read': {
      code?: string
      value?: string
    }
    'SampleType-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      code?: string
      value?: string
    }
    'SampleType-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      code?: string
      value?: string
    }
    'SampleType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
    }
    'SampleType.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'SampleType.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'SampleType.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'SampleType.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'SampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'Shape.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'Site-context.acl.read': {
      code?: string
      name?: string
    }
    'Site-context_sample.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-context_stratigraphic_unit.acl.read': {
      code?: string
      name?: string
    }
    'Site-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      code?: string
      name?: string
    }
    'Site-pottery.acl.read': {
      code?: string
      name?: string
    }
    'Site-sample.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-site.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?: components['schemas']['User-site.acl.read'] | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext-site.acl.read'][]
    }
    'Site-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site-sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?: components['schemas']['User.jsonld-site.acl.read'] | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext.jsonld-site.acl.read'][]
    }
    'Site.jsonld-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
      createdBy?:
        | components['schemas']['User.jsonld-site_user_privilege.acl.read']
        | null
    }
    'Site.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'SiteCulturalContext-site.acl.read': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteUserPrivilege-site_user_privilege.update': {
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string
      user?: components['schemas']['User.jsonld-site_user_privilege.acl.read']
      site?: components['schemas']['Site.jsonld-site_user_privilege.acl.read']
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      user: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'StratigraphicUnit-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-pottery.acl.read': {
      site?: components['schemas']['Site-pottery.acl.read']
      readonly code: string
    }
    'StratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-su.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
    }
    'StratigraphicUnit-sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-pottery.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly code: string
    }
    'StratigraphicUnit.jsonld-su.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number: number
      description?: string | null
      interpretation?: string | null
    }
    'StratigraphicUnit.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-zoo_bone.acl.read']
      readonly code: string
    }
    'StratigraphicUnitRelation.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      id?: string
      value?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      invertedBy?: string | null
      description?: string | null
    }
    'StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      lftStratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      relationship: string
      rgtStratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read']
    }
    'StratigraphicUnitRelationship.jsonld-su_relationship.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      lftStratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      relationship: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      rgtStratigraphicUnit: string
    }
    'SurfaceTreatment.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'UniqueValidator.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      criteria?: string[]
      valid?: number
    }
    'User-site.acl.read': {
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User-user.change-password': {
      plainPassword: string | null
    }
    'User-user.update': {
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
    }
    'User.UserPasswordChangeInputDto.jsonld': {
      oldPassword: string | null
      plainPassword: string | null
      repeatPassword: string | null
    }
    'User.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-user.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      readonly userIdentifier?: string
    }
    'User.jsonld-user.create': {
      /** Format: email */
      email: string
      plainPassword: string | null
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
    }
    'User.jsonld-user.me.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @description A map of site IDs (keys) to privilege levels (values).
       * @example {
       *       "1": 1,
       *       "2": 0
       *     }
       */
      readonly sitePrivileges?: {
        [key: string]: number
      }
    }
    'VocZooBone.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number
      code?: string
      value?: string
    }
    'VocZooBonePart.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
    }
    'VocZooSpecies.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
      scientificName?: string
      class?: string
      family?: string | null
    }
    'ZooBone-zoo_bone.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      species: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
    'ZooBone.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-zoo_bone.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      species: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      side?: string | null
      notes?: string | null
    }
    'ZooBone.jsonld-zoo_bone.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      species: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  api_vocabularyanalysistypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyanalysistypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'contextSamples.sample'?: string
        'contextSamples.sample[]'?: string[]
        'contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[description]'?: boolean
        'exists[contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.description'?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Context-context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Context resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Context.jsonld-context.create']
      }
    }
    responses: {
      /** @description Context resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Context resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Context-context.create']
      }
    }
    responses: {
      /** @description Context resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'contextSamples.sample'?: string
        'contextSamples.sample[]'?: string[]
        'contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[description]'?: boolean
        'exists[contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.description'?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Context identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Context-context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_samples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextSample-context_sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_samples_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ContextSample resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ContextSample.jsonld']
      }
    }
    responses: {
      /** @description ContextSample resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextSample.jsonld-context_sample.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontext_samples_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextSample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextSample.jsonld-context_sample.item.acl.read_sample.acl.read_context.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontext_samples_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextSample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextSample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextSample-context_sample.samples.acl.read_sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.samples.acl.read_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamples_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextSample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.contexts.acl.read_context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextStratigraphicUnit-context_stratigraphic_unit.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ContextStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description ContextStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextStratigraphicUnit-context_stratigraphic_unit.contexts.acl.read_context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycontexttypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycontexttypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularycultural_contexts_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['CulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycultural_contexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CulturalContext identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CulturalContext resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['CulturalContext.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotterydecorations_get_collection: {
    parameters: {
      query?: {
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Decoration collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Decoration.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotterydecorations_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Decoration identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Decoration resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Decoration.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryfunctional_forms_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description FunctionalForm collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['FunctionalForm.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryfunctional_forms_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description FunctionalForm identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description FunctionalForm resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['FunctionalForm.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryfunctional_groups_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description FunctionalGroup collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['FunctionalGroup.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryfunctional_groups_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description FunctionalGroup identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description FunctionalGroup resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['FunctionalGroup.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  login_check_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The login data */
    requestBody: {
      content: {
        'application/json': {
          email: string
          password: string
        }
      }
    }
    responses: {
      /** @description User token created */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            readonly token: string
          }
        }
      }
    }
  }
  api_datamedia_objects_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        sha256?: string
        'sha256[]'?: string[]
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObject.jsonld-media_object.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_objects_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MediaObject resource */
    requestBody: {
      content: {
        'multipart/form-data': {
          /** Format: binary */
          file: string
          /**
           * Format: iri-reference
           * @example /api/vocabulary/media_object/types/1
           */
          type: string
          description?: string
        }
      }
    }
    responses: {
      /** @description MediaObject resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_objects_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_objects_sha256_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        sha256: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MediaObjectStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.create']
      }
    }
    responses: {
      /** @description MediaObjectStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdmedia_objects_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularymedia_objecttypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularymedia_objecttypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datapotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[inventory]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        'order[culturalContext.id]'?: 'asc' | 'desc'
        'order[shape.value]'?: 'asc' | 'desc'
        'order[functionalGroup.value]'?: 'asc' | 'desc'
        'order[functionalForm.value]'?: 'asc' | 'desc'
        'order[surfaceTreatment.value]'?: 'asc' | 'desc'
        'order[innerColor]'?: 'asc' | 'desc'
        'order[outerColor]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        'decorations.decoration'?: string
        'decorations.decoration[]'?: string[]
        inventory?: string
        culturalContext?: string
        'culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        shape?: string
        'shape[]'?: string[]
        functionalGroup?: string
        'functionalGroup[]'?: string[]
        functionalForm?: string
        'functionalForm[]'?: string[]
        notes?: string
        surfaceTreatment?: string
        'surfaceTreatment[]'?: string[]
        innerColor?: string
        outerColor?: string
        decorationMotif?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        'exists[notes]'?: boolean
        'exists[culturalContext]'?: boolean
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[innerColor]'?: boolean
        'exists[outerColor]'?: boolean
        'exists[decorationMotif]'?: boolean
        'exists[shape]'?: boolean
        'exists[surfaceTreatment]'?: boolean
        /** @description Search case insensitive match the inventory field */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Pottery-pottery.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Pottery.jsonld-pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapotteries_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Pottery resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Pottery.jsonld-pottery.create']
      }
    }
    responses: {
      /** @description Pottery resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datapotteries_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datapotteries_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datapotteries_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Pottery resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Pottery-pottery.create']
      }
    }
    responses: {
      /** @description Pottery resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdpotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[inventory]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        'order[culturalContext.id]'?: 'asc' | 'desc'
        'order[shape.value]'?: 'asc' | 'desc'
        'order[functionalGroup.value]'?: 'asc' | 'desc'
        'order[functionalForm.value]'?: 'asc' | 'desc'
        'order[surfaceTreatment.value]'?: 'asc' | 'desc'
        'order[innerColor]'?: 'asc' | 'desc'
        'order[outerColor]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        'decorations.decoration'?: string
        'decorations.decoration[]'?: string[]
        inventory?: string
        culturalContext?: string
        'culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        shape?: string
        'shape[]'?: string[]
        functionalGroup?: string
        'functionalGroup[]'?: string[]
        functionalForm?: string
        'functionalForm[]'?: string[]
        notes?: string
        surfaceTreatment?: string
        'surfaceTreatment[]'?: string[]
        innerColor?: string
        outerColor?: string
        decorationMotif?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        'exists[notes]'?: boolean
        'exists[culturalContext]'?: boolean
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[innerColor]'?: boolean
        'exists[outerColor]'?: boolean
        'exists[decorationMotif]'?: boolean
        'exists[shape]'?: boolean
        'exists[surfaceTreatment]'?: boolean
        /** @description Search case insensitive match the inventory field */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Pottery identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Pottery-pottery.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Pottery.jsonld-pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysespotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        'order[document.mimeType]'?: 'asc' | 'desc'
        'order[rawData.mimeType]'?: 'asc' | 'desc'
        'pottery.stratigraphicUnit.site'?: string
        'pottery.stratigraphicUnit.site[]'?: string[]
        'pottery.stratigraphicUnit'?: string
        'pottery.stratigraphicUnit[]'?: string[]
        'pottery.decorations.decoration'?: string
        'pottery.decorations.decoration[]'?: string[]
        'pottery.inventory'?: string
        'pottery.culturalContext'?: string
        'pottery.culturalContext[]'?: string[]
        'pottery.chronologyLower'?: number
        'pottery.chronologyLower[]'?: number[]
        'pottery.chronologyUpper'?: number
        'pottery.chronologyUpper[]'?: number[]
        'pottery.shape'?: string
        'pottery.shape[]'?: string[]
        'pottery.functionalGroup'?: string
        'pottery.functionalGroup[]'?: string[]
        'pottery.functionalForm'?: string
        'pottery.functionalForm[]'?: string[]
        'pottery.notes'?: string
        'pottery.surfaceTreatment'?: string
        'pottery.surfaceTreatment[]'?: string[]
        'pottery.innerColor'?: string
        'pottery.outerColor'?: string
        'pottery.decorationMotif'?: string
        type?: string
        'type[]'?: string[]
        'document.mimeType'?: string
        'rawData.mimeType'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        'pottery.stratigraphicUnit.number[between]'?: string
        'pottery.stratigraphicUnit.number[gt]'?: string
        'pottery.stratigraphicUnit.number[gte]'?: string
        'pottery.stratigraphicUnit.number[lt]'?: string
        'pottery.stratigraphicUnit.number[lte]'?: string
        'pottery.stratigraphicUnit.year[between]'?: string
        'pottery.stratigraphicUnit.year[gt]'?: string
        'pottery.stratigraphicUnit.year[gte]'?: string
        'pottery.stratigraphicUnit.year[lt]'?: string
        'pottery.stratigraphicUnit.year[lte]'?: string
        'pottery.chronologyLower[between]'?: string
        'pottery.chronologyLower[gt]'?: string
        'pottery.chronologyLower[gte]'?: string
        'pottery.chronologyLower[lt]'?: string
        'pottery.chronologyLower[lte]'?: string
        'pottery.chronologyUpper[between]'?: string
        'pottery.chronologyUpper[gt]'?: string
        'pottery.chronologyUpper[gte]'?: string
        'pottery.chronologyUpper[lt]'?: string
        'pottery.chronologyUpper[lte]'?: string
        'exists[pottery.notes]'?: boolean
        'exists[pottery.culturalContext]'?: boolean
        'exists[pottery.chronologyLower]'?: boolean
        'exists[pottery.chronologyUpper]'?: boolean
        'exists[pottery.innerColor]'?: boolean
        'exists[pottery.outerColor]'?: boolean
        'exists[pottery.decorationMotif]'?: boolean
        'exists[pottery.shape]'?: boolean
        'exists[pottery.surfaceTreatment]'?: boolean
        'exists[document]'?: boolean
        'exists[rawData]'?: boolean
        'exists[summary]'?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryAnalysis collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysespotteries_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new PotteryAnalysis resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['PotteryAnalysis.jsonld']
      }
    }
    responses: {
      /** @description PotteryAnalysis resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysespotteries_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description PotteryAnalysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryAnalysis resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysespotteries_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description PotteryAnalysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryAnalysis resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysespotteries_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description PotteryAnalysis identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated PotteryAnalysis resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['PotteryAnalysis']
      }
    }
    responses: {
      /** @description PotteryAnalysis resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datapotteries_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        'order[document.mimeType]'?: 'asc' | 'desc'
        'order[rawData.mimeType]'?: 'asc' | 'desc'
        'pottery.stratigraphicUnit.site'?: string
        'pottery.stratigraphicUnit.site[]'?: string[]
        'pottery.stratigraphicUnit'?: string
        'pottery.stratigraphicUnit[]'?: string[]
        'pottery.decorations.decoration'?: string
        'pottery.decorations.decoration[]'?: string[]
        'pottery.inventory'?: string
        'pottery.culturalContext'?: string
        'pottery.culturalContext[]'?: string[]
        'pottery.chronologyLower'?: number
        'pottery.chronologyLower[]'?: number[]
        'pottery.chronologyUpper'?: number
        'pottery.chronologyUpper[]'?: number[]
        'pottery.shape'?: string
        'pottery.shape[]'?: string[]
        'pottery.functionalGroup'?: string
        'pottery.functionalGroup[]'?: string[]
        'pottery.functionalForm'?: string
        'pottery.functionalForm[]'?: string[]
        'pottery.notes'?: string
        'pottery.surfaceTreatment'?: string
        'pottery.surfaceTreatment[]'?: string[]
        'pottery.innerColor'?: string
        'pottery.outerColor'?: string
        'pottery.decorationMotif'?: string
        type?: string
        'type[]'?: string[]
        'document.mimeType'?: string
        'rawData.mimeType'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        'pottery.stratigraphicUnit.number[between]'?: string
        'pottery.stratigraphicUnit.number[gt]'?: string
        'pottery.stratigraphicUnit.number[gte]'?: string
        'pottery.stratigraphicUnit.number[lt]'?: string
        'pottery.stratigraphicUnit.number[lte]'?: string
        'pottery.stratigraphicUnit.year[between]'?: string
        'pottery.stratigraphicUnit.year[gt]'?: string
        'pottery.stratigraphicUnit.year[gte]'?: string
        'pottery.stratigraphicUnit.year[lt]'?: string
        'pottery.stratigraphicUnit.year[lte]'?: string
        'pottery.chronologyLower[between]'?: string
        'pottery.chronologyLower[gt]'?: string
        'pottery.chronologyLower[gte]'?: string
        'pottery.chronologyLower[lt]'?: string
        'pottery.chronologyLower[lte]'?: string
        'pottery.chronologyUpper[between]'?: string
        'pottery.chronologyUpper[gt]'?: string
        'pottery.chronologyUpper[gte]'?: string
        'pottery.chronologyUpper[lt]'?: string
        'pottery.chronologyUpper[lte]'?: string
        'exists[pottery.notes]'?: boolean
        'exists[pottery.culturalContext]'?: boolean
        'exists[pottery.chronologyLower]'?: boolean
        'exists[pottery.chronologyUpper]'?: boolean
        'exists[pottery.innerColor]'?: boolean
        'exists[pottery.outerColor]'?: boolean
        'exists[pottery.decorationMotif]'?: boolean
        'exists[pottery.shape]'?: boolean
        'exists[pottery.surfaceTreatment]'?: boolean
        'exists[document]'?: boolean
        'exists[rawData]'?: boolean
        'exists[summary]'?: boolean
      }
      header?: never
      path: {
        /** @description PotteryAnalysis identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryAnalysis collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['PotteryAnalysis.jsonld-pottery_analysis.acl.read_media_object_join.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapottery_decorations_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryDecoration collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['PotteryDecoration.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapottery_decorations_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description PotteryDecoration identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryDecoration resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['PotteryDecoration.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[type.code]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'sampleStratigraphicUnits.stratigraphicUnit'?: string
        'sampleStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Sample-sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Sample.jsonld-sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamples_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Sample resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Sample.jsonld']
      }
    }
    responses: {
      /** @description Sample resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasamples_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Sample resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Sample']
      }
    }
    responses: {
      /** @description Sample resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[type.code]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'sampleStratigraphicUnits.stratigraphicUnit'?: string
        'sampleStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
      }
      header?: never
      path: {
        /** @description Sample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Sample-sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Sample.jsonld-sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasample_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasample_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SampleStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description SampleStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasample_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasample_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.samples.acl.read_sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularysampletypes_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SampleType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularysampletypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryshapes_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Shape collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Shape.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryshapes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Shape identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Shape resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Shape.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        code?: string
        'code[]'?: string[]
        'culturalContexts.culturalContext'?: string
        'culturalContexts.culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        fieldDirector?: string
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[description]'?: boolean
        'exists[fieldDirector]'?: boolean
        'exists[culturalContexts]'?: boolean
        /**
         * @description Search case insensitive match across code (starts with) and name (contains). Up to two characters only code is matched.
         * @example me
         */
        search?: string
        /**
         * @description Filter sites to only those where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Site-site.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Site.jsonld-site.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasites_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Site resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Site.jsonld-site.create']
      }
    }
    responses: {
      /** @description Site resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Site resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Site-site.create']
      }
    }
    responses: {
      /** @description Site resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasite_cultural_contexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteCulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasite_cultural_contexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteCulturalContext identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteCulturalContext.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.create']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['SiteUserPrivilege-site_user_privilege.update']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusersmesite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'stratigraphicUnitContexts.context'?: string
        'stratigraphicUnitContexts.context[]'?: string[]
        'stratigraphicUnitSamples.sample'?: string
        'stratigraphicUnitSamples.sample[]'?: string[]
        'stratigraphicUnitContexts.context.name'?: string
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        'number[between]'?: string
        'number[gt]'?: string
        'number[gte]'?: string
        'number[lt]'?: string
        'number[lte]'?: string
        'year[between]'?: string
        'year[gt]'?: string
        'year[gte]'?: string
        'year[lt]'?: string
        'year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        interpretation?: string
        'exists[description]'?: boolean
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter stratigraphic units to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['StratigraphicUnit-sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'stratigraphicUnitContexts.context'?: string
        'stratigraphicUnitContexts.context[]'?: string[]
        'stratigraphicUnitSamples.sample'?: string
        'stratigraphicUnitSamples.sample[]'?: string[]
        'stratigraphicUnitContexts.context.name'?: string
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        'number[between]'?: string
        'number[gt]'?: string
        'number[gte]'?: string
        'number[lt]'?: string
        'number[lte]'?: string
        'year[between]'?: string
        'year[gt]'?: string
        'year[gte]'?: string
        'year[lt]'?: string
        'year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        interpretation?: string
        'exists[description]'?: boolean
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter stratigraphic units to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['StratigraphicUnit-sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-su.create']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['StratigraphicUnit-su.create']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_vocabularystratigraphic_unitrelationships_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelation collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnitRelation.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularystratigraphic_unitrelationships_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelation identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelation resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnitRelation.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new StratigraphicUnitRelationship resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-su_relationship.create']
      }
    }
    responses: {
      /** @description StratigraphicUnitRelationship resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdrelationships_get_collection: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotterysurface_treatments_get_collection: {
    parameters: {
      query?: {
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SurfaceTreatment collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SurfaceTreatment.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotterysurface_treatments_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SurfaceTreatment identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SurfaceTreatment resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SurfaceTreatment.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysespotteries_pottery_type_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        pottery: string
        /** @description UniqueValidator identifier */
        type: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontext_sample_context_sample_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        context: string
        /** @description UniqueValidator identifier */
        sample: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontext_stratigraphic_units_context_stratigraphicUnit_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        context: string
        /** @description UniqueValidator identifier */
        stratigraphicUnit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontexts_site_name_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        name: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquemedia_objectsstratigraphic_units_mediaObject_item_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        mediaObject: string
        /** @description UniqueValidator identifier */
        item: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquepotteriesinventory_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesample_stratigraphic_units_sample_stratigraphicUnit_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        sample: string
        /** @description UniqueValidator identifier */
        stratigraphicUnit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesamples_site_type_year_number_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        type: string
        /** @description UniqueValidator identifier */
        year: string
        /** @description UniqueValidator identifier */
        number: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesite_user_privileges_site_user_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        user: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitescode_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitesname_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquestratigraphic_unit_relationships_lftStratigraphicUnit_rgtStratigraphicUnit_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        lftStratigraphicUnit: string
        /** @description UniqueValidator identifier */
        rgtStratigraphicUnit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquestratigraphic_units_site_year_number_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        year: string
        /** @description UniqueValidator identifier */
        number: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        /**
         * @description Search case insensitive match the email field
         * @example me
         */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['User.jsonld-user.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.jsonld-user.create']
      }
    }
    responses: {
      /** @description User resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusersmechange_password_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.UserPasswordChangeInputDto.jsonld']
      }
    }
    responses: {
      /** @description User resource created */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.update']
      }
    }
    responses: {
      /** @description User resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_idchange_password_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.change-password']
      }
    }
    responses: {
      /** @description User resource updated */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_usersme_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.me.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzoobones_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooBone.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzoobones_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBone resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooBone.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzoobone_parts_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBonePart collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooBonePart.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzoobone_parts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooBonePart identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBonePart resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooBonePart.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzoospecies_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooSpecies collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooSpecies.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzoospecies_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooSpecies identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooSpecies resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooSpecies.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdzoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[species.value]'?: 'asc' | 'desc'
        'order[species.scientificName]'?: 'asc' | 'desc'
        'order[species.family]'?: 'asc' | 'desc'
        'order[species.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[endsPreserved]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        species?: string
        'species[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        side?: string
        'side[]'?: string[]
        'species.family'?: string
        'species.family[]'?: string[]
        'species.class'?: string
        'species.class[]'?: string[]
        'species.scientificName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
        'exists[species]'?: boolean
        /**
         * @description Filter by bitwise AND operation - all specified bits must be set
         * @example 5
         */
        'endsPreserved[and]'?: number
        /**
         * @description Filter by bitwise AND operation - any of the specified bits must be set
         * @example 3
         */
        'endsPreserved[any]'?: number
      }
      header?: never
      path: {
        /** @description ZooBone identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooBone.jsonld-zoo_bone.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[species.value]'?: 'asc' | 'desc'
        'order[species.scientificName]'?: 'asc' | 'desc'
        'order[species.family]'?: 'asc' | 'desc'
        'order[species.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[endsPreserved]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        species?: string
        'species[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        side?: string
        'side[]'?: string[]
        'species.family'?: string
        'species.family[]'?: string[]
        'species.class'?: string
        'species.class[]'?: string[]
        'species.scientificName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
        'exists[species]'?: boolean
        /**
         * @description Filter by bitwise AND operation - all specified bits must be set
         * @example 5
         */
        'endsPreserved[and]'?: number
        /**
         * @description Filter by bitwise AND operation - any of the specified bits must be set
         * @example 3
         */
        'endsPreserved[any]'?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooBone.jsonld-zoo_bone.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazoobones_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ZooBone resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.create']
      }
    }
    responses: {
      /** @description ZooBone resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datazoobones_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazoobones_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazoobones_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated ZooBone resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['ZooBone-zoo_bone.create']
      }
    }
    responses: {
      /** @description ZooBone resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
}
