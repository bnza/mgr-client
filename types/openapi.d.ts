/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/data/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datacontexts_get_collection']
    put?: never
    /**
     * Creates a Context resource.
     * @description Creates a Context resource.
     */
    post: operations['api_datacontexts_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Context resource.
     * @description Retrieves a Context resource.
     */
    get: operations['api_datacontexts_id_get']
    put?: never
    post?: never
    /**
     * Removes the Context resource.
     * @description Removes the Context resource.
     */
    delete: operations['api_datacontexts_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Context resource.
     * @description Updates the Context resource.
     */
    patch: operations['api_datacontexts_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datasites_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datacontext_samples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_samples/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextSample resource.
     * @description Retrieves a ContextSample resource.
     */
    get: operations['api_datacontext_samples_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datacontexts_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextSample resources.
     * @description Retrieves the collection of ContextSample resources.
     */
    get: operations['api_datasamples_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontext_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a ContextStratigraphicUnit resource.
     * @description Creates a ContextStratigraphicUnit resource.
     */
    post: operations['api_datacontext_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextStratigraphicUnit resource.
     * @description Retrieves a ContextStratigraphicUnit resource.
     */
    get: operations['api_datacontext_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the ContextStratigraphicUnit resource.
     * @description Removes the ContextStratigraphicUnit resource.
     */
    delete: operations['api_datacontext_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontexts_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/context/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextType resources.
     * @description Retrieves the collection of ContextType resources.
     */
    get: operations['api_vocabularycontexttypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of CulturalContext resources.
     * @description Retrieves the collection of CulturalContext resources.
     */
    get: operations['api_vocabularycultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a user token.
     * @description Creates a user token.
     */
    post: operations['login_check_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Sample resources.
     * @description Retrieves the collection of Sample resources.
     */
    get: operations['api_datasamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Sample resource.
     * @description Retrieves a Sample resource.
     */
    get: operations['api_datasamples_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasample_stratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SampleStratigraphicUnit resource.
     * @description Retrieves a SampleStratigraphicUnit resource.
     */
    get: operations['api_datasample_stratigraphic_units_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasamples_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/sample/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleType resources.
     * @description Retrieves the collection of SampleType resources.
     */
    get: operations['api_vocabularysampletypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Site resources.
     * @description Retrieves the collection of Site resources.
     */
    get: operations['api_datasites_get_collection']
    put?: never
    /**
     * Creates a Site resource.
     * @description Creates a Site resource.
     */
    post: operations['api_datasites_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Site resource.
     * @description Retrieves a Site resource.
     */
    get: operations['api_datasites_id_get']
    put?: never
    post?: never
    /**
     * Removes the Site resource.
     * @description Removes the Site resource.
     */
    delete: operations['api_datasites_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Site resource.
     * @description Updates the Site resource.
     */
    patch: operations['api_datasites_id_patch']
    trace?: never
  }
  '/api/data/site_cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteCulturalContext resources.
     * @description Retrieves the collection of SiteCulturalContext resources.
     */
    get: operations['api_datasite_cultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/site_cultural_contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteCulturalContext resource.
     * @description Retrieves a SiteCulturalContext resource.
     */
    get: operations['api_datasite_cultural_contexts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsite_user_privileges_get_collection']
    put?: never
    /**
     * Creates a SiteUserPrivilege resource.
     * @description Creates a SiteUserPrivilege resource.
     */
    post: operations['api_adminsite_user_privileges_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsite_user_privileges_id_get']
    put?: never
    post?: never
    /**
     * Removes the SiteUserPrivilege resource.
     * @description Removes the SiteUserPrivilege resource.
     */
    delete: operations['api_adminsite_user_privileges_id_delete']
    options?: never
    head?: never
    /**
     * Updates the SiteUserPrivilege resource.
     * @description Updates the SiteUserPrivilege resource.
     */
    patch: operations['api_adminsite_user_privileges_id_patch']
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusersmesite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datasites_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a StratigraphicUnit resource.
     * @description Creates a StratigraphicUnit resource.
     */
    post: operations['api_datastratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnit resource.
     * @description Retrieves a StratigraphicUnit resource.
     */
    get: operations['api_datastratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the StratigraphicUnit resource.
     * @description Removes the StratigraphicUnit resource.
     */
    delete: operations['api_datastratigraphic_units_id_delete']
    options?: never
    head?: never
    /**
     * Updates the StratigraphicUnit resource.
     * @description Updates the StratigraphicUnit resource.
     */
    patch: operations['api_datastratigraphic_units_id_patch']
    trace?: never
  }
  '/api/validator/unique/context_stratigraphic_units/{context}/{stratigraphicUnit}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontext_stratigraphic_units_context_stratigraphicUnit_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/contexts/{site}/{name}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontexts_site_name_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/site_user_privileges/{site}/{user}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesite_user_privileges_site_user_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/code/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitescode_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/name/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitesname_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/stratigraphic_units/{site}/{year}/{number}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquestratigraphic_units_site_year_number_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of User resources.
     * @description Retrieves the collection of User resources.
     */
    get: operations['api_adminusers_get_collection']
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusers_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusersmechange_password_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_adminusers_id_get']
    put?: never
    post?: never
    /**
     * Removes the User resource.
     * @description Removes the User resource.
     */
    delete: operations['api_adminusers_id_delete']
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_id_patch']
    trace?: never
  }
  '/api/admin/users/{id}/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_idchange_password_patch']
    trace?: never
  }
  '/api/users/me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_usersme_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** @description Unprocessable entity */
    'ConstraintViolation-json': {
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    /** @description Unprocessable entity */
    'ConstraintViolation.jsonld-jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly description?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    'Context-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context.acl.read']
      site?: components['schemas']['Site.jsonld-context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      name: string
      description?: string | null
    }
    'Context.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_sample.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_sample.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      type?: components['schemas']['ContextType.jsonld-context_stratigraphic_unit.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.acl.read']
      name?: string
    }
    'Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      type?: components['schemas']['ContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'ContextSample.jsonld-context_sample.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample?: string
    }
    'ContextSample.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_sample.contexts.acl.read_context.acl.read']
    }
    'ContextSample.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-context_sample.samples.acl.read_sample.acl.read']
    }
    'ContextStratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context: string
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'ContextType.jsonld': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number
      group?: string
      value?: string
    }
    'ContextType.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      group?: string
      value?: string
    }
    'ContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      group?: string
      value?: string
    }
    'CulturalContext.jsonld': {
      readonly '@id'?: string
      readonly '@type'?: string
      id?: number
      value?: string
    }
    /** @description A representation of common errors. */
    Error: {
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string | null
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string | null
      /** @default 400 */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
    }
    /** @description A representation of common errors. */
    'Error.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string | null
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string | null
      /** @default 400 */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
      readonly description?: string | null
    }
    'Sample.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_sample.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-context_sample.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      type?: components['schemas']['SampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      sample?: components['schemas']['Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id'?: string
      readonly '@type'?: string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'SampleType.jsonld': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number
      code?: string
      value?: string
    }
    'SampleType.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      value?: string
    }
    'SampleType.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      value?: string
    }
    'SampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      value?: string
    }
    'Site-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      name?: string
    }
    'Site.jsonld-context_sample.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      name?: string
    }
    'Site.jsonld-context_sample.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?: components['schemas']['User.jsonld-site.acl.read'] | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext.jsonld-site.acl.read'][]
    }
    'Site.jsonld-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
      createdBy?:
        | components['schemas']['User.jsonld-site_user_privilege.acl.read']
        | null
    }
    'Site.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'SiteCulturalContext.jsonld': {
      readonly '@id'?: string
      readonly '@type'?: string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteUserPrivilege-site_user_privilege.update': {
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** Format: uuid */
      readonly id?: string
      user?: components['schemas']['User.jsonld-site_user_privilege.acl.read']
      site?: components['schemas']['Site.jsonld-site_user_privilege.acl.read']
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      user: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    StratigraphicUnit: {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code?: string
    }
    'StratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number: number
      description?: string | null
      interpretation?: string | null
      readonly code?: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      interpretation?: string | null
      readonly code?: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code?: string
    }
    'StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code?: string
    }
    'StratigraphicUnit.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code?: string
    }
    'UniqueValidator.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      criteria?: string[]
      valid?: number
    }
    'User-user.change-password': {
      plainPassword: string | null
    }
    'User-user.update': {
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
    }
    'User.UserPasswordChangeInputDto.jsonld': {
      oldPassword: string | null
      plainPassword: string | null
      repeatPassword: string | null
    }
    'User.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-user.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      readonly userIdentifier?: string
    }
    'User.jsonld-user.create': {
      /** Format: email */
      email: string
      plainPassword: string | null
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
    }
    'User.jsonld-user.me.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id'?: string
      readonly '@type'?: string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @description A map of site IDs (keys) to privilege levels (values).
       * @example {
       *       "1": 1,
       *       "2": 0
       *     }
       */
      readonly sitePrivileges?: {
        [key: string]: number
      }
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  api_datacontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Context resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Context.jsonld-context.create']
      }
    }
    responses: {
      /** @description Context resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Context resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Context-context.create']
      }
    }
    responses: {
      /** @description Context resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter contexts to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Context identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_samples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_samples_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextSample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextSample.jsonld-context_sample.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description ContextSample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.samples.acl.read_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamples_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description ContextSample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextSample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextSample.jsonld-context_sample.contexts.acl.read_context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ContextStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description ContextStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycontexttypes_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycultural_contexts_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['CulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  login_check_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The login data */
    requestBody: {
      content: {
        'application/json': {
          email: string
          password: string
        }
      }
    }
    responses: {
      /** @description User token created */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            readonly token: string
          }
        }
      }
    }
  }
  api_datasamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Sample.jsonld-sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamples_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasample_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasample_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularysampletypes_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SampleType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasites_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        code?: string
        'code[]'?: string[]
        'culturalContexts.culturalContext'?: string
        'culturalContexts.culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        fieldDirector?: string
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[description]'?: boolean
        'exists[fieldDirector]'?: boolean
        'exists[culturalContexts]'?: boolean
        /**
         * @description Search case insensitive match across code (starts with) and name (contains). Up to two characters only code is matched.
         * @example me
         */
        search?: string
        /**
         * @description Filter sites to only those where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['Site.jsonld-site.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasites_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Site resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Site.jsonld-site.create']
      }
    }
    responses: {
      /** @description Site resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Site resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Site-site.create']
      }
    }
    responses: {
      /** @description Site resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasite_cultural_contexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteCulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasite_cultural_contexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteCulturalContext identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteCulturalContext.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.create']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['SiteUserPrivilege-site_user_privilege.update']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusersmesite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter stratigraphic units to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter stratigraphic units to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['StratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['StratigraphicUnit']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_validatoruniquecontext_stratigraphic_units_context_stratigraphicUnit_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        context: string
        /** @description UniqueValidator identifier */
        stratigraphicUnit: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontexts_site_name_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        name: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesite_user_privileges_site_user_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        user: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitescode_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitesname_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquestratigraphic_units_site_year_number_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description UniqueValidator identifier */
        site: string
        /** @description UniqueValidator identifier */
        year: string
        /** @description UniqueValidator identifier */
        number: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        /**
         * @description Search case insensitive match the email field
         * @example me
         */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['User.jsonld-user.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id'?: string
              '@type'?: string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type'?: string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type'?: string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.jsonld-user.create']
      }
    }
    responses: {
      /** @description User resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusersmechange_password_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.UserPasswordChangeInputDto.jsonld']
      }
    }
    responses: {
      /** @description User resource created */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.update']
      }
    }
    responses: {
      /** @description User resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_idchange_password_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.change-password']
      }
    }
    responses: {
      /** @description User resource updated */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_usersme_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.me.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
}
