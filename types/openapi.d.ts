import type { Iri } from '~~/types'

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/data/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Analysis resources.
     * @description Retrieves the collection of Analysis resources.
     */
    get: operations['api_dataanalyses_get_collection']
    put?: never
    /**
     * Creates a Analysis resource.
     * @description Creates a Analysis resource.
     */
    post: operations['api_dataanalyses_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Analysis resource.
     * @description Retrieves a Analysis resource.
     */
    get: operations['api_dataanalyses_id_get']
    put?: never
    post?: never
    /**
     * Removes the Analysis resource.
     * @description Removes the Analysis resource.
     */
    delete: operations['api_dataanalyses_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Analysis resource.
     * @description Updates the Analysis resource.
     */
    patch: operations['api_dataanalyses_id_patch']
    trace?: never
  }
  '/api/data/analyses/contexts/botany': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextBotany resources.
     * @description Retrieves the collection of AnalysisContextBotany resources.
     */
    get: operations['api_dataanalysescontextsbotany_get_collection']
    put?: never
    /**
     * Creates a AnalysisContextBotany resource.
     * @description Creates a AnalysisContextBotany resource.
     */
    post: operations['api_dataanalysescontextsbotany_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/contexts/botany/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisContextBotany resource.
     * @description Retrieves a AnalysisContextBotany resource.
     */
    get: operations['api_dataanalysescontextsbotany_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisContextBotany resource.
     * @description Removes the AnalysisContextBotany resource.
     */
    delete: operations['api_dataanalysescontextsbotany_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisContextBotany resource.
     * @description Updates the AnalysisContextBotany resource.
     */
    patch: operations['api_dataanalysescontextsbotany_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/contexts/botany': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextBotany resources.
     * @description Retrieves the collection of AnalysisContextBotany resources.
     */
    get: operations['api_dataanalyses_parentIdcontextsbotany_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/analyses/botany': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextBotany resources.
     * @description Retrieves the collection of AnalysisContextBotany resources.
     */
    get: operations['api_datacontexts_parentIdanalysesbotany_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analysis_context_botany_taxonomies': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextBotanyTaxonomy resources.
     * @description Retrieves the collection of AnalysisContextBotanyTaxonomy resources.
     */
    get: operations['api_dataanalysis_context_botany_taxonomies_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analysis_context_botany_taxonomies/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisContextBotanyTaxonomy resource.
     * @description Retrieves a AnalysisContextBotanyTaxonomy resource.
     */
    get: operations['api_dataanalysis_context_botany_taxonomies_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/contexts/zoo': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextZoo resources.
     * @description Retrieves the collection of AnalysisContextZoo resources.
     */
    get: operations['api_dataanalysescontextszoo_get_collection']
    put?: never
    /**
     * Creates a AnalysisContextZoo resource.
     * @description Creates a AnalysisContextZoo resource.
     */
    post: operations['api_dataanalysescontextszoo_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/contexts/zoo/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisContextZoo resource.
     * @description Retrieves a AnalysisContextZoo resource.
     */
    get: operations['api_dataanalysescontextszoo_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisContextZoo resource.
     * @description Removes the AnalysisContextZoo resource.
     */
    delete: operations['api_dataanalysescontextszoo_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisContextZoo resource.
     * @description Updates the AnalysisContextZoo resource.
     */
    patch: operations['api_dataanalysescontextszoo_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/contexts/zoo': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextZoo resources.
     * @description Retrieves the collection of AnalysisContextZoo resources.
     */
    get: operations['api_dataanalyses_parentIdcontextszoo_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/analyses/zoo': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextZoo resources.
     * @description Retrieves the collection of AnalysisContextZoo resources.
     */
    get: operations['api_datacontexts_parentIdanalyseszoo_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analysis_context_zoo_taxonomies': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisContextZooTaxonomy resources.
     * @description Retrieves the collection of AnalysisContextZooTaxonomy resources.
     */
    get: operations['api_dataanalysis_context_zoo_taxonomies_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analysis_context_zoo_taxonomies/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisContextZooTaxonomy resource.
     * @description Retrieves a AnalysisContextZooTaxonomy resource.
     */
    get: operations['api_dataanalysis_context_zoo_taxonomies_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/individuals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisIndividual resources.
     * @description Retrieves the collection of AnalysisIndividual resources.
     */
    get: operations['api_dataanalysesindividuals_get_collection']
    put?: never
    /**
     * Creates a AnalysisIndividual resource.
     * @description Creates a AnalysisIndividual resource.
     */
    post: operations['api_dataanalysesindividuals_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/individuals/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisIndividual resource.
     * @description Retrieves a AnalysisIndividual resource.
     */
    get: operations['api_dataanalysesindividuals_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisIndividual resource.
     * @description Removes the AnalysisIndividual resource.
     */
    delete: operations['api_dataanalysesindividuals_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisIndividual resource.
     * @description Updates the AnalysisIndividual resource.
     */
    patch: operations['api_dataanalysesindividuals_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/individuals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisIndividual resources.
     * @description Retrieves the collection of AnalysisIndividual resources.
     */
    get: operations['api_dataanalyses_parentIdindividuals_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/individuals/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisIndividual resources.
     * @description Retrieves the collection of AnalysisIndividual resources.
     */
    get: operations['api_dataindividuals_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisPottery resources.
     * @description Retrieves the collection of AnalysisPottery resources.
     */
    get: operations['api_dataanalysespotteries_get_collection']
    put?: never
    /**
     * Creates a AnalysisPottery resource.
     * @description Creates a AnalysisPottery resource.
     */
    post: operations['api_dataanalysespotteries_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/potteries/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisPottery resource.
     * @description Retrieves a AnalysisPottery resource.
     */
    get: operations['api_dataanalysespotteries_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisPottery resource.
     * @description Removes the AnalysisPottery resource.
     */
    delete: operations['api_dataanalysespotteries_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisPottery resource.
     * @description Updates the AnalysisPottery resource.
     */
    patch: operations['api_dataanalysespotteries_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisPottery resources.
     * @description Retrieves the collection of AnalysisPottery resources.
     */
    get: operations['api_dataanalyses_parentIdpotteries_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/potteries/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisPottery resources.
     * @description Retrieves the collection of AnalysisPottery resources.
     */
    get: operations['api_datapotteries_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/samples/microstratigraphy': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     * @description Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     */
    get: operations['api_dataanalysessamplesmicrostratigraphy_get_collection']
    put?: never
    /**
     * Creates a AnalysisSampleMicrostratigraphy resource.
     * @description Creates a AnalysisSampleMicrostratigraphy resource.
     */
    post: operations['api_dataanalysessamplesmicrostratigraphy_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/samples/microstratigraphy/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisSampleMicrostratigraphy resource.
     * @description Retrieves a AnalysisSampleMicrostratigraphy resource.
     */
    get: operations['api_dataanalysessamplesmicrostratigraphy_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisSampleMicrostratigraphy resource.
     * @description Removes the AnalysisSampleMicrostratigraphy resource.
     */
    delete: operations['api_dataanalysessamplesmicrostratigraphy_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisSampleMicrostratigraphy resource.
     * @description Updates the AnalysisSampleMicrostratigraphy resource.
     */
    patch: operations['api_dataanalysessamplesmicrostratigraphy_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/samples/microstratigraphy': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     * @description Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     */
    get: operations['api_dataanalyses_parentIdsamplesmicrostratigraphy_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/microstratigraphy/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     * @description Retrieves the collection of AnalysisSampleMicrostratigraphy resources.
     */
    get: operations['api_datasamplesmicrostratigraphy_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/sites/anthropology': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSiteAnthropology resources.
     * @description Retrieves the collection of AnalysisSiteAnthropology resources.
     */
    get: operations['api_dataanalysessitesanthropology_get_collection']
    put?: never
    /**
     * Creates a AnalysisSiteAnthropology resource.
     * @description Creates a AnalysisSiteAnthropology resource.
     */
    post: operations['api_dataanalysessitesanthropology_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/sites/anthropology/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisSiteAnthropology resource.
     * @description Retrieves a AnalysisSiteAnthropology resource.
     */
    get: operations['api_dataanalysessitesanthropology_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisSiteAnthropology resource.
     * @description Removes the AnalysisSiteAnthropology resource.
     */
    delete: operations['api_dataanalysessitesanthropology_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisSiteAnthropology resource.
     * @description Updates the AnalysisSiteAnthropology resource.
     */
    patch: operations['api_dataanalysessitesanthropology_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/sites/anthropology': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSiteAnthropology resources.
     * @description Retrieves the collection of AnalysisSiteAnthropology resources.
     */
    get: operations['api_dataanalyses_parentIdsitesanthropology_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/anthropology/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisSiteAnthropology resources.
     * @description Retrieves the collection of AnalysisSiteAnthropology resources.
     */
    get: operations['api_datasitesanthropology_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooBone resources.
     * @description Retrieves the collection of AnalysisZooBone resources.
     */
    get: operations['api_dataanalyseszoobones_get_collection']
    put?: never
    /**
     * Creates a AnalysisZooBone resource.
     * @description Creates a AnalysisZooBone resource.
     */
    post: operations['api_dataanalyseszoobones_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/zoo/bones/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisZooBone resource.
     * @description Retrieves a AnalysisZooBone resource.
     */
    get: operations['api_dataanalyseszoobones_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisZooBone resource.
     * @description Removes the AnalysisZooBone resource.
     */
    delete: operations['api_dataanalyseszoobones_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisZooBone resource.
     * @description Updates the AnalysisZooBone resource.
     */
    patch: operations['api_dataanalyseszoobones_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooBone resources.
     * @description Retrieves the collection of AnalysisZooBone resources.
     */
    get: operations['api_dataanalyses_parentIdzoobones_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/bones/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooBone resources.
     * @description Retrieves the collection of AnalysisZooBone resources.
     */
    get: operations['api_datazoobones_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/zoo/teeth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooTooth resources.
     * @description Retrieves the collection of AnalysisZooTooth resources.
     */
    get: operations['api_dataanalyseszooteeth_get_collection']
    put?: never
    /**
     * Creates a AnalysisZooTooth resource.
     * @description Creates a AnalysisZooTooth resource.
     */
    post: operations['api_dataanalyseszooteeth_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/zoo/teeth/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a AnalysisZooTooth resource.
     * @description Retrieves a AnalysisZooTooth resource.
     */
    get: operations['api_dataanalyseszooteeth_id_get']
    put?: never
    post?: never
    /**
     * Removes the AnalysisZooTooth resource.
     * @description Removes the AnalysisZooTooth resource.
     */
    delete: operations['api_dataanalyseszooteeth_id_delete']
    options?: never
    head?: never
    /**
     * Updates the AnalysisZooTooth resource.
     * @description Updates the AnalysisZooTooth resource.
     */
    patch: operations['api_dataanalyseszooteeth_id_patch']
    trace?: never
  }
  '/api/data/analyses/{parentId}/zoo/teeth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooTooth resources.
     * @description Retrieves the collection of AnalysisZooTooth resources.
     */
    get: operations['api_dataanalyses_parentIdzooteeth_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/teeth/{parentId}/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of AnalysisZooTooth resources.
     * @description Retrieves the collection of AnalysisZooTooth resources.
     */
    get: operations['api_datazooteeth_parentIdanalyses_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/botany/charcoals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of BotanyCharcoal resources.
     * @description Retrieves the collection of BotanyCharcoal resources.
     */
    get: operations['api_databotanycharcoals_get_collection']
    put?: never
    /**
     * Creates a BotanyCharcoal resource.
     * @description Creates a BotanyCharcoal resource.
     */
    post: operations['api_databotanycharcoals_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/botany/charcoals/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a BotanyCharcoal resource.
     * @description Retrieves a BotanyCharcoal resource.
     */
    get: operations['api_databotanycharcoals_id_get']
    put?: never
    post?: never
    /**
     * Removes the BotanyCharcoal resource.
     * @description Removes the BotanyCharcoal resource.
     */
    delete: operations['api_databotanycharcoals_id_delete']
    options?: never
    head?: never
    /**
     * Updates the BotanyCharcoal resource.
     * @description Updates the BotanyCharcoal resource.
     */
    patch: operations['api_databotanycharcoals_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/botany/charcoals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of BotanyCharcoal resources.
     * @description Retrieves the collection of BotanyCharcoal resources.
     */
    get: operations['api_datastratigraphic_units_parentIdbotanycharcoals_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/botany/seeds': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of BotanySeed resources.
     * @description Retrieves the collection of BotanySeed resources.
     */
    get: operations['api_databotanyseeds_get_collection']
    put?: never
    /**
     * Creates a BotanySeed resource.
     * @description Creates a BotanySeed resource.
     */
    post: operations['api_databotanyseeds_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/botany/seeds/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a BotanySeed resource.
     * @description Retrieves a BotanySeed resource.
     */
    get: operations['api_databotanyseeds_id_get']
    put?: never
    post?: never
    /**
     * Removes the BotanySeed resource.
     * @description Removes the BotanySeed resource.
     */
    delete: operations['api_databotanyseeds_id_delete']
    options?: never
    head?: never
    /**
     * Updates the BotanySeed resource.
     * @description Updates the BotanySeed resource.
     */
    patch: operations['api_databotanyseeds_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/botany/seeds': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of BotanySeed resources.
     * @description Retrieves the collection of BotanySeed resources.
     */
    get: operations['api_datastratigraphic_units_parentIdbotanyseeds_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datacontexts_get_collection']
    put?: never
    /**
     * Creates a Context resource.
     * @description Creates a Context resource.
     */
    post: operations['api_datacontexts_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Context resource.
     * @description Retrieves a Context resource.
     */
    get: operations['api_datacontexts_id_get']
    put?: never
    post?: never
    /**
     * Removes the Context resource.
     * @description Removes the Context resource.
     */
    delete: operations['api_datacontexts_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Context resource.
     * @description Updates the Context resource.
     */
    patch: operations['api_datacontexts_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Context resources.
     * @description Retrieves the collection of Context resources.
     */
    get: operations['api_datasites_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontext_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a ContextStratigraphicUnit resource.
     * @description Creates a ContextStratigraphicUnit resource.
     */
    post: operations['api_datacontext_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/context_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ContextStratigraphicUnit resource.
     * @description Retrieves a ContextStratigraphicUnit resource.
     */
    get: operations['api_datacontext_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the ContextStratigraphicUnit resource.
     * @description Removes the ContextStratigraphicUnit resource.
     */
    delete: operations['api_datacontext_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/contexts/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datacontexts_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ContextStratigraphicUnit resources.
     * @description Retrieves the collection of ContextStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdcontexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/individuals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Individual resources.
     * @description Retrieves the collection of Individual resources.
     */
    get: operations['api_dataindividuals_get_collection']
    put?: never
    /**
     * Creates a Individual resource.
     * @description Creates a Individual resource.
     */
    post: operations['api_dataindividuals_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/individuals/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Individual resource.
     * @description Retrieves a Individual resource.
     */
    get: operations['api_dataindividuals_id_get']
    put?: never
    post?: never
    /**
     * Removes the Individual resource.
     * @description Removes the Individual resource.
     */
    delete: operations['api_dataindividuals_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Individual resource.
     * @description Updates the Individual resource.
     */
    patch: operations['api_dataindividuals_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/individuals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Individual resources.
     * @description Retrieves the collection of Individual resources.
     */
    get: operations['api_datastratigraphic_units_parentIdindividuals_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a user token.
     * @description Creates a user token.
     */
    post: operations['login_check_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_objects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObject resources.
     * @description Retrieves the collection of MediaObject resources.
     */
    get: operations['api_datamedia_objects_get_collection']
    put?: never
    /**
     * Creates a MediaObject resource.
     * @description Creates a MediaObject resource.
     */
    post: operations['api_datamedia_objects_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_objects/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObject resource.
     * @description Retrieves a MediaObject resource.
     */
    get: operations['api_datamedia_objects_id_get']
    put?: never
    post?: never
    /**
     * Removes the MediaObject resource.
     * @description Removes the MediaObject resource.
     */
    delete: operations['api_datamedia_objects_id_delete']
    options?: never
    head?: never
    /**
     * Updates the MediaObject resource.
     * @description Updates the MediaObject resource.
     */
    patch: operations['api_datamedia_objects_id_patch']
    trace?: never
  }
  '/api/data/media_objects/{sha256}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObject resource.
     * @description Retrieves a MediaObject resource.
     */
    get: operations['api_datamedia_objects_sha256_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/analyses/{parentId}/media_objects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectAnalysis resources.
     * @description Retrieves the collection of MediaObjectAnalysis resources.
     */
    get: operations['api_dataanalyses_parentIdmedia_objects_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectAnalysis resources.
     * @description Retrieves the collection of MediaObjectAnalysis resources.
     */
    get: operations['api_datamedia_object_analyses_get_collection']
    put?: never
    /**
     * Creates a MediaObjectAnalysis resource.
     * @description Creates a MediaObjectAnalysis resource.
     */
    post: operations['api_datamedia_object_analyses_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_analyses/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObjectAnalysis resource.
     * @description Retrieves a MediaObjectAnalysis resource.
     */
    get: operations['api_datamedia_object_analyses_id_get']
    put?: never
    post?: never
    /**
     * Removes the MediaObjectAnalysis resource.
     * @description Removes the MediaObjectAnalysis resource.
     */
    delete: operations['api_datamedia_object_analyses_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectStratigraphicUnit resources.
     * @description Retrieves the collection of MediaObjectStratigraphicUnit resources.
     */
    get: operations['api_datamedia_object_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a MediaObjectStratigraphicUnit resource.
     * @description Creates a MediaObjectStratigraphicUnit resource.
     */
    post: operations['api_datamedia_object_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/media_object_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MediaObjectStratigraphicUnit resource.
     * @description Retrieves a MediaObjectStratigraphicUnit resource.
     */
    get: operations['api_datamedia_object_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the MediaObjectStratigraphicUnit resource.
     * @description Removes the MediaObjectStratigraphicUnit resource.
     */
    delete: operations['api_datamedia_object_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/media_objects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MediaObjectStratigraphicUnit resources.
     * @description Retrieves the collection of MediaObjectStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdmedia_objects_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/microstratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MicrostratigraphicUnit resources.
     * @description Retrieves the collection of MicrostratigraphicUnit resources.
     */
    get: operations['api_datamicrostratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a MicrostratigraphicUnit resource.
     * @description Creates a MicrostratigraphicUnit resource.
     */
    post: operations['api_datamicrostratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/microstratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a MicrostratigraphicUnit resource.
     * @description Retrieves a MicrostratigraphicUnit resource.
     */
    get: operations['api_datamicrostratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the MicrostratigraphicUnit resource.
     * @description Removes the MicrostratigraphicUnit resource.
     */
    delete: operations['api_datamicrostratigraphic_units_id_delete']
    options?: never
    head?: never
    /**
     * Updates the MicrostratigraphicUnit resource.
     * @description Updates the MicrostratigraphicUnit resource.
     */
    patch: operations['api_datamicrostratigraphic_units_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/microstratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of MicrostratigraphicUnit resources.
     * @description Retrieves the collection of MicrostratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdmicrostratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Pottery resources.
     * @description Retrieves the collection of Pottery resources.
     */
    get: operations['api_datapotteries_get_collection']
    put?: never
    /**
     * Creates a Pottery resource.
     * @description Creates a Pottery resource.
     */
    post: operations['api_datapotteries_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/potteries/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Pottery resource.
     * @description Retrieves a Pottery resource.
     */
    get: operations['api_datapotteries_id_get']
    put?: never
    post?: never
    /**
     * Removes the Pottery resource.
     * @description Removes the Pottery resource.
     */
    delete: operations['api_datapotteries_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Pottery resource.
     * @description Updates the Pottery resource.
     */
    patch: operations['api_datapotteries_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Pottery resources.
     * @description Retrieves the collection of Pottery resources.
     */
    get: operations['api_datastratigraphic_units_parentIdpotteries_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/pottery_decorations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of PotteryDecoration resources.
     * @description Retrieves the collection of PotteryDecoration resources.
     */
    get: operations['api_datapottery_decorations_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/pottery_decorations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a PotteryDecoration resource.
     * @description Retrieves a PotteryDecoration resource.
     */
    get: operations['api_datapottery_decorations_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Sample resources.
     * @description Retrieves the collection of Sample resources.
     */
    get: operations['api_datasamples_get_collection']
    put?: never
    /**
     * Creates a Sample resource.
     * @description Creates a Sample resource.
     */
    post: operations['api_datasamples_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Sample resource.
     * @description Retrieves a Sample resource.
     */
    get: operations['api_datasamples_id_get']
    put?: never
    post?: never
    /**
     * Removes the Sample resource.
     * @description Removes the Sample resource.
     */
    delete: operations['api_datasamples_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Sample resource.
     * @description Updates the Sample resource.
     */
    patch: operations['api_datasamples_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Sample resources.
     * @description Retrieves the collection of Sample resources.
     */
    get: operations['api_datasites_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasample_stratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a SampleStratigraphicUnit resource.
     * @description Creates a SampleStratigraphicUnit resource.
     */
    post: operations['api_datasample_stratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sample_stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SampleStratigraphicUnit resource.
     * @description Retrieves a SampleStratigraphicUnit resource.
     */
    get: operations['api_datasample_stratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the SampleStratigraphicUnit resource.
     * @description Removes the SampleStratigraphicUnit resource.
     */
    delete: operations['api_datasample_stratigraphic_units_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/samples/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datasamples_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SampleStratigraphicUnit resources.
     * @description Retrieves the collection of SampleStratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_parentIdsamples_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sediment_cores': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SedimentCore resources.
     * @description Retrieves the collection of SedimentCore resources.
     */
    get: operations['api_datasediment_cores_get_collection']
    put?: never
    /**
     * Creates a SedimentCore resource.
     * @description Creates a SedimentCore resource.
     */
    post: operations['api_datasediment_cores_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sediment_cores/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SedimentCore resource.
     * @description Retrieves a SedimentCore resource.
     */
    get: operations['api_datasediment_cores_id_get']
    put?: never
    post?: never
    /**
     * Removes the SedimentCore resource.
     * @description Removes the SedimentCore resource.
     */
    delete: operations['api_datasediment_cores_id_delete']
    options?: never
    head?: never
    /**
     * Updates the SedimentCore resource.
     * @description Updates the SedimentCore resource.
     */
    patch: operations['api_datasediment_cores_id_patch']
    trace?: never
  }
  '/api/data/sites/{parentId}/sediment_cores': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SedimentCore resources.
     * @description Retrieves the collection of SedimentCore resources.
     */
    get: operations['api_datasites_parentIdsediment_cores_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sediment_core_depths': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SedimentCoreDepth resources.
     * @description Retrieves the collection of SedimentCoreDepth resources.
     */
    get: operations['api_datasediment_core_depths_get_collection']
    put?: never
    /**
     * Creates a SedimentCoreDepth resource.
     * @description Creates a SedimentCoreDepth resource.
     */
    post: operations['api_datasediment_core_depths_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sediment_core_depths/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SedimentCoreDepth resource.
     * @description Retrieves a SedimentCoreDepth resource.
     */
    get: operations['api_datasediment_core_depths_id_get']
    put?: never
    post?: never
    /**
     * Removes the SedimentCoreDepth resource.
     * @description Removes the SedimentCoreDepth resource.
     */
    delete: operations['api_datasediment_core_depths_id_delete']
    options?: never
    head?: never
    /**
     * Updates the SedimentCoreDepth resource.
     * @description Updates the SedimentCoreDepth resource.
     */
    patch: operations['api_datasediment_core_depths_id_patch']
    trace?: never
  }
  '/api/data/sediment_cores/{parentId}/stratigraphic_units/depths': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SedimentCoreDepth resources.
     * @description Retrieves the collection of SedimentCoreDepth resources.
     */
    get: operations['api_datasediment_cores_parentIdstratigraphic_unitsdepths_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/sediment_cores/depths': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SedimentCoreDepth resources.
     * @description Retrieves the collection of SedimentCoreDepth resources.
     */
    get: operations['api_datastratigraphic_units_parentIdsediment_coresdepths_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of Site resources.
     * @description Retrieves the collection of Site resources.
     */
    get: operations['api_datasites_get_collection']
    put?: never
    /**
     * Creates a Site resource.
     * @description Creates a Site resource.
     */
    post: operations['api_datasites_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a Site resource.
     * @description Retrieves a Site resource.
     */
    get: operations['api_datasites_id_get']
    put?: never
    post?: never
    /**
     * Removes the Site resource.
     * @description Removes the Site resource.
     */
    delete: operations['api_datasites_id_delete']
    options?: never
    head?: never
    /**
     * Updates the Site resource.
     * @description Updates the Site resource.
     */
    patch: operations['api_datasites_id_patch']
    trace?: never
  }
  '/api/data/site_cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteCulturalContext resources.
     * @description Retrieves the collection of SiteCulturalContext resources.
     */
    get: operations['api_datasite_cultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/site_cultural_contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteCulturalContext resource.
     * @description Retrieves a SiteCulturalContext resource.
     */
    get: operations['api_datasite_cultural_contexts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsite_user_privileges_get_collection']
    put?: never
    /**
     * Creates a SiteUserPrivilege resource.
     * @description Creates a SiteUserPrivilege resource.
     */
    post: operations['api_adminsite_user_privileges_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsite_user_privileges_id_get']
    put?: never
    post?: never
    /**
     * Removes the SiteUserPrivilege resource.
     * @description Removes the SiteUserPrivilege resource.
     */
    delete: operations['api_adminsite_user_privileges_id_delete']
    options?: never
    head?: never
    /**
     * Updates the SiteUserPrivilege resource.
     * @description Updates the SiteUserPrivilege resource.
     */
    patch: operations['api_adminsite_user_privileges_id_patch']
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/sites/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminsites_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusersmesite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of SiteUserPrivilege resources.
     * @description Retrieves the collection of SiteUserPrivilege resources.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{parentId}/site_user_privileges/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a SiteUserPrivilege resource.
     * @description Retrieves a SiteUserPrivilege resource.
     */
    get: operations['api_adminusers_parentIdsite_user_privileges_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/sites/{parentId}/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datasites_parentIdstratigraphic_units_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnit resources.
     * @description Retrieves the collection of StratigraphicUnit resources.
     */
    get: operations['api_datastratigraphic_units_get_collection']
    put?: never
    /**
     * Creates a StratigraphicUnit resource.
     * @description Creates a StratigraphicUnit resource.
     */
    post: operations['api_datastratigraphic_units_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnit resource.
     * @description Retrieves a StratigraphicUnit resource.
     */
    get: operations['api_datastratigraphic_units_id_get']
    put?: never
    post?: never
    /**
     * Removes the StratigraphicUnit resource.
     * @description Removes the StratigraphicUnit resource.
     */
    delete: operations['api_datastratigraphic_units_id_delete']
    options?: never
    head?: never
    /**
     * Updates the StratigraphicUnit resource.
     * @description Updates the StratigraphicUnit resource.
     */
    patch: operations['api_datastratigraphic_units_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_unit_relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnitRelationship resources.
     * @description Retrieves the collection of StratigraphicUnitRelationship resources.
     */
    get: operations['api_datastratigraphic_unit_relationships_get_collection']
    put?: never
    /**
     * Creates a StratigraphicUnitRelationship resource.
     * @description Creates a StratigraphicUnitRelationship resource.
     */
    post: operations['api_datastratigraphic_unit_relationships_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_unit_relationships/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a StratigraphicUnitRelationship resource.
     * @description Retrieves a StratigraphicUnitRelationship resource.
     */
    get: operations['api_datastratigraphic_unit_relationships_id_get']
    put?: never
    post?: never
    /**
     * Removes the StratigraphicUnitRelationship resource.
     * @description Removes the StratigraphicUnitRelationship resource.
     */
    delete: operations['api_datastratigraphic_unit_relationships_id_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of StratigraphicUnitRelationship resources.
     * @description Retrieves the collection of StratigraphicUnitRelationship resources.
     */
    get: operations['api_datastratigraphic_units_parentIdrelationships_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalyses_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/contexts/botany': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysescontextsbotany_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/contexts/zoo': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysescontextszoo_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/individuals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysesindividuals_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/potteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysespotteries_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/samples/microstratigraphy': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysessamplesmicrostratigraphy_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/sites/anthropology': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalysessitesanthropology_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalyseszoobones_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/analyses/zoo/teeth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueanalyseszooteeth_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/context_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontext_stratigraphic_units_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquecontexts_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/individuals/identifier': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniqueindividualsidentifier_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/media_objects/analyses': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquemedia_objectsanalyses_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/media_objects/sha256': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquemedia_objectssha256_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/media_objects/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquemedia_objectsstratigraphic_units_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/microstratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquemicrostratigraphic_units_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/potteries/inventory': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquepotteriesinventory_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sample_stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesample_stratigraphic_units_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/samples': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesamples_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sediment_core_depths': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesediment_core_depths_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sediment_cores': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesediment_cores_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/site_user_privileges': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesite_user_privileges_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/code': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitescode_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/sites/name': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquesitesname_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/stratigraphic_unit_relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquestratigraphic_unit_relationships_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/validator/unique/stratigraphic_units': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a UniqueValidator resource.
     * @description Retrieves a UniqueValidator resource.
     */
    get: operations['api_validatoruniquestratigraphic_units_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of User resources.
     * @description Retrieves the collection of User resources.
     */
    get: operations['api_adminusers_get_collection']
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusers_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/me/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Creates a User resource.
     * @description Creates a User resource.
     */
    post: operations['api_adminusersmechange_password_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/admin/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_adminusers_id_get']
    put?: never
    post?: never
    /**
     * Removes the User resource.
     * @description Removes the User resource.
     */
    delete: operations['api_adminusers_id_delete']
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_id_patch']
    trace?: never
  }
  '/api/admin/users/{id}/change_password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Updates the User resource.
     * @description Updates the User resource.
     */
    patch: operations['api_adminusers_idchange_password_patch']
    trace?: never
  }
  '/api/users/me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a User resource.
     * @description Retrieves a User resource.
     */
    get: operations['api_usersme_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/analysis/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocAnalysisType resources.
     * @description Retrieves the collection of VocAnalysisType resources.
     */
    get: operations['api_vocabularyanalysistypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/analysis/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocAnalysisType resource.
     * @description Retrieves a VocAnalysisType resource.
     */
    get: operations['api_vocabularyanalysistypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/elements': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocBotanyElement resources.
     * @description Retrieves the collection of VocBotanyElement resources.
     */
    get: operations['api_vocabularybotanyelements_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/elements/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocBotanyElement resource.
     * @description Retrieves a VocBotanyElement resource.
     */
    get: operations['api_vocabularybotanyelements_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/element_parts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocBotanyElementPart resources.
     * @description Retrieves the collection of VocBotanyElementPart resources.
     */
    get: operations['api_vocabularybotanyelement_parts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/element_parts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocBotanyElementPart resource.
     * @description Retrieves a VocBotanyElementPart resource.
     */
    get: operations['api_vocabularybotanyelement_parts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/taxonomies': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocBotanyTaxonomy resources.
     * @description Retrieves the collection of VocBotanyTaxonomy resources.
     */
    get: operations['api_vocabularybotanytaxonomies_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/botany/taxonomies/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocBotanyTaxonomy resource.
     * @description Retrieves a VocBotanyTaxonomy resource.
     */
    get: operations['api_vocabularybotanytaxonomies_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/context/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocContextType resources.
     * @description Retrieves the collection of VocContextType resources.
     */
    get: operations['api_vocabularycontexttypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/context/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocContextType resource.
     * @description Retrieves a VocContextType resource.
     */
    get: operations['api_vocabularycontexttypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/cultural_contexts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocCulturalContext resources.
     * @description Retrieves the collection of VocCulturalContext resources.
     */
    get: operations['api_vocabularycultural_contexts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/cultural_contexts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocCulturalContext resource.
     * @description Retrieves a VocCulturalContext resource.
     */
    get: operations['api_vocabularycultural_contexts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/individual/age': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocIndividualAge resources.
     * @description Retrieves the collection of VocIndividualAge resources.
     */
    get: operations['api_vocabularyindividualage_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/individual/age/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocIndividualAge resource.
     * @description Retrieves a VocIndividualAge resource.
     */
    get: operations['api_vocabularyindividualage_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/media_object/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocMediaObjectType resources.
     * @description Retrieves the collection of VocMediaObjectType resources.
     */
    get: operations['api_vocabularymedia_objecttypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/media_object/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocMediaObjectType resource.
     * @description Retrieves a VocMediaObjectType resource.
     */
    get: operations['api_vocabularymedia_objecttypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/decorations': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocPotteryDecoration resources.
     * @description Retrieves the collection of VocPotteryDecoration resources.
     */
    get: operations['api_vocabularypotterydecorations_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/decorations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocPotteryDecoration resource.
     * @description Retrieves a VocPotteryDecoration resource.
     */
    get: operations['api_vocabularypotterydecorations_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_forms': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocPotteryFunctionalForm resources.
     * @description Retrieves the collection of VocPotteryFunctionalForm resources.
     */
    get: operations['api_vocabularypotteryfunctional_forms_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_forms/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocPotteryFunctionalForm resource.
     * @description Retrieves a VocPotteryFunctionalForm resource.
     */
    get: operations['api_vocabularypotteryfunctional_forms_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_groups': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocPotteryFunctionalGroup resources.
     * @description Retrieves the collection of VocPotteryFunctionalGroup resources.
     */
    get: operations['api_vocabularypotteryfunctional_groups_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/functional_groups/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocPotteryFunctionalGroup resource.
     * @description Retrieves a VocPotteryFunctionalGroup resource.
     */
    get: operations['api_vocabularypotteryfunctional_groups_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/shapes': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocPotteryShape resources.
     * @description Retrieves the collection of VocPotteryShape resources.
     */
    get: operations['api_vocabularypotteryshapes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/shapes/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocPotteryShape resource.
     * @description Retrieves a VocPotteryShape resource.
     */
    get: operations['api_vocabularypotteryshapes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/surface_treatments': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocPotterySurfaceTreatment resources.
     * @description Retrieves the collection of VocPotterySurfaceTreatment resources.
     */
    get: operations['api_vocabularypotterysurface_treatments_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/pottery/surface_treatments/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocPotterySurfaceTreatment resource.
     * @description Retrieves a VocPotterySurfaceTreatment resource.
     */
    get: operations['api_vocabularypotterysurface_treatments_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/sample/types': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocSampleType resources.
     * @description Retrieves the collection of VocSampleType resources.
     */
    get: operations['api_vocabularysampletypes_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/sample/types/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocSampleType resource.
     * @description Retrieves a VocSampleType resource.
     */
    get: operations['api_vocabularysampletypes_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/stratigraphic_unit/relationships': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocStratigraphicUnitRelation resources.
     * @description Retrieves the collection of VocStratigraphicUnitRelation resources.
     */
    get: operations['api_vocabularystratigraphic_unitrelationships_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/stratigraphic_unit/relationships/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocStratigraphicUnitRelation resource.
     * @description Retrieves a VocStratigraphicUnitRelation resource.
     */
    get: operations['api_vocabularystratigraphic_unitrelationships_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooBone resources.
     * @description Retrieves the collection of VocZooBone resources.
     */
    get: operations['api_vocabularyzoobones_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bones/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooBone resource.
     * @description Retrieves a VocZooBone resource.
     */
    get: operations['api_vocabularyzoobones_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bone_parts': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooBonePart resources.
     * @description Retrieves the collection of VocZooBonePart resources.
     */
    get: operations['api_vocabularyzoobone_parts_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/bone_parts/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooBonePart resource.
     * @description Retrieves a VocZooBonePart resource.
     */
    get: operations['api_vocabularyzoobone_parts_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/taxonomies': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of VocZooTaxonomy resources.
     * @description Retrieves the collection of VocZooTaxonomy resources.
     */
    get: operations['api_vocabularyzootaxonomies_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/vocabulary/zoo/taxonomies/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a VocZooTaxonomy resource.
     * @description Retrieves a VocZooTaxonomy resource.
     */
    get: operations['api_vocabularyzootaxonomies_id_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooBone resources.
     * @description Retrieves the collection of ZooBone resources.
     */
    get: operations['api_datastratigraphic_units_parentIdzoobones_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/bones': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooBone resources.
     * @description Retrieves the collection of ZooBone resources.
     */
    get: operations['api_datazoobones_get_collection']
    put?: never
    /**
     * Creates a ZooBone resource.
     * @description Creates a ZooBone resource.
     */
    post: operations['api_datazoobones_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/bones/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ZooBone resource.
     * @description Retrieves a ZooBone resource.
     */
    get: operations['api_datazoobones_id_get']
    put?: never
    post?: never
    /**
     * Removes the ZooBone resource.
     * @description Removes the ZooBone resource.
     */
    delete: operations['api_datazoobones_id_delete']
    options?: never
    head?: never
    /**
     * Updates the ZooBone resource.
     * @description Updates the ZooBone resource.
     */
    patch: operations['api_datazoobones_id_patch']
    trace?: never
  }
  '/api/data/stratigraphic_units/{parentId}/zoo/teeth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooTooth resources.
     * @description Retrieves the collection of ZooTooth resources.
     */
    get: operations['api_datastratigraphic_units_parentIdzooteeth_get_collection']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/teeth': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves the collection of ZooTooth resources.
     * @description Retrieves the collection of ZooTooth resources.
     */
    get: operations['api_datazooteeth_get_collection']
    put?: never
    /**
     * Creates a ZooTooth resource.
     * @description Creates a ZooTooth resource.
     */
    post: operations['api_datazooteeth_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/data/zoo/teeth/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieves a ZooTooth resource.
     * @description Retrieves a ZooTooth resource.
     */
    get: operations['api_datazooteeth_id_get']
    put?: never
    post?: never
    /**
     * Removes the ZooTooth resource.
     * @description Removes the ZooTooth resource.
     */
    delete: operations['api_datazooteeth_id_delete']
    options?: never
    head?: never
    /**
     * Updates the ZooTooth resource.
     * @description Updates the ZooTooth resource.
     */
    patch: operations['api_datazooteeth_id_patch']
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    'Analysis-analysis.acl.read': {
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType-analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?: components['schemas']['User-analysis.acl.read'] | null
    }
    'Analysis-analysis.create': {
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
    }
    'Analysis.jsonld-analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?: components['schemas']['User.jsonld-analysis.acl.read'] | null
    }
    'Analysis.jsonld-analysis.create': {
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
        | null
    }
    'Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
        | null
    }
    'Analysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      identifier: string
      /**
       * @default 0
       * @example 0
       */
      status: number
      type: components['schemas']['VocAnalysisType.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
      responsible?: string | null
      year: number
      laboratory?: string | null
      summary?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
        | null
    }
    'AnalysisContextBotany-analysis_join.update': {
      taxonomies?: string[]
      summary?: string | null
    }
    'AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Context.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
      taxonomies?: components['schemas']['AnalysisContextBotanyTaxonomy.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read'][]
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
      summary?: string | null
    }
    'AnalysisContextBotany.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      taxonomies?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisContextBotanyTaxonomy.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy?: string
    }
    'AnalysisContextBotanyTaxonomy.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy?: string
    }
    'AnalysisContextZoo-analysis_join.update': {
      taxonomies?: string[]
      summary?: string | null
    }
    'AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Context.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
      taxonomies?: components['schemas']['AnalysisContextZooTaxonomy.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read'][]
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
      summary?: string | null
    }
    'AnalysisContextZoo.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      taxonomies?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisContextZooTaxonomy.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy?: string
    }
    'AnalysisContextZooTaxonomy.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy?: string
    }
    'AnalysisIndividual-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Individual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
      summary?: string | null
    }
    'AnalysisIndividual.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisPottery-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Pottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
      summary?: string | null
    }
    'AnalysisPottery.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisSampleMicrostratigraphy-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Sample.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
      summary?: string | null
    }
    'AnalysisSampleMicrostratigraphy.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisSiteAnthropology-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
      summary?: string | null
    }
    'AnalysisSiteAnthropology.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisZooBone-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['ZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
      summary?: string | null
    }
    'AnalysisZooBone.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'AnalysisZooTooth-analysis_join.update': {
      summary?: string | null
    }
    'AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      subject?: components['schemas']['ZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
      analysis?: components['schemas']['Analysis.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
      summary?: string | null
    }
    'AnalysisZooTooth.jsonld-analysis_join.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      subject?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      analysis?: string
      summary?: string | null
    }
    'BotanyCharcoal-botany_charcoal.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
    }
    'BotanyCharcoal.jsonld-botany_charcoal.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-botany_charcoal.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
      readonly code?: string
    }
    'BotanyCharcoal.jsonld-botany_charcoal.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
    }
    'BotanySeed-botany_seed.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
    }
    'BotanySeed.jsonld-botany_seed.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-botany_seed.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
      readonly code?: string
    }
    'BotanySeed.jsonld-botany_seed.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      notes?: string | null
    }
    /** @description Unprocessable entity */
    'ConstraintViolation-json': {
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    /** @description Unprocessable entity */
    'ConstraintViolation.jsonld-jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * @default 422
       * @example 422
       */
      status: number
      violations?: {
        /** @description The property path of the violation */
        propertyPath?: string
        /** @description The message associated with the violation */
        message?: string
      }[]
      readonly detail?: string
      readonly description?: string
      readonly type?: string
      readonly title?: string | null
      readonly instance?: string | null
    }
    'Context-context.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['VocContextType-context.acl.read']
      site?: components['schemas']['Site-context.acl.read']
      name?: string
      description?: string | null
    }
    'Context-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      name?: string
      description?: string | null
    }
    'Context-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['VocContextType-context_stratigraphic_unit.acl.read']
      site?: components['schemas']['Site-context_stratigraphic_unit.acl.read']
      name?: string
    }
    'Context-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly id?: number & string
      type?: components['schemas']['VocContextType-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['VocContextType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['VocContextType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['VocContextType.jsonld-context.acl.read']
      site?: components['schemas']['Site.jsonld-context.acl.read']
      name?: string
      description?: string | null
    }
    'Context.jsonld-context.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      name: string
      description?: string | null
    }
    'Context.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['VocContextType.jsonld-context_stratigraphic_unit.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.acl.read']
      name?: string
    }
    'Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      type?: components['schemas']['VocContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
      name?: string
      description?: string | null
    }
    'ContextStratigraphicUnit-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-context_stratigraphic_unit.acl.read']
      context?: components['schemas']['Context-context_stratigraphic_unit.acl.read']
    }
    'ContextStratigraphicUnit-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly id?: number & string
      context?: components['schemas']['Context-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
    }
    'ContextStratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      context: string
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      context?: components['schemas']['Context.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read']
    }
    'ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    /** @description A representation of common errors. */
    Error: {
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string
      /**
       * @default 400
       * @example 404
       */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
    }
    /** @description A representation of common errors. */
    'Error.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** @description A short, human-readable summary of the problem. */
      readonly title?: string
      /** @description A human-readable explanation specific to this occurrence of the problem. */
      readonly detail?: string
      /**
       * @default 400
       * @example 404
       */
      status: number
      /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
      readonly instance?: string | null
      /** @description A URI reference that identifies the problem type */
      readonly type?: string
      readonly description?: string | null
    }
    'Individual-individual.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-individual.acl.read']
      identifier?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      age?: string | null
      sex?: string | null
      notes?: string | null
    }
    'Individual-individual.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit?: string
      identifier?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      age?: string | null
      sex?: string | null
      notes?: string | null
    }
    'Individual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
      identifier?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      age?: string | null
      sex?: string | null
      notes?: string | null
    }
    'Individual.jsonld-individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-individual.acl.read']
      identifier?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      age?: string | null
      sex?: string | null
      notes?: string | null
    }
    'Individual.jsonld-individual.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      identifier: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      age?: string | null
      /** @enum {string|null} */
      sex?: 'F' | 'M' | '?' | null
      notes?: string | null
    }
    'MediaObject-media_object.update': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      description?: string | null
    }
    'MediaObject.jsonld-media_object.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      uploadedBy?:
        | components['schemas']['User.jsonld-media_object.acl.read']
        | null
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
      description?: string | null
      readonly contentThumbnailUrl?: string | null
      dimensions?: string[] | null
    }
    'MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      uploadedBy?:
        | components['schemas']['User.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
        | null
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
      description?: string | null
      readonly contentThumbnailUrl?: string | null
      dimensions?: string[] | null
    }
    'MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      uploadedBy?:
        | components['schemas']['User.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
        | null
      contentUrl?: string | null
      originalFilename?: string
      sha256?: string
      mimeType?: string
      size?: number
      width?: number | null
      height?: number | null
      /** Format: date-time */
      uploadDate?: string | null
      description?: string | null
      readonly contentThumbnailUrl?: string | null
      dimensions?: string[] | null
    }
    'MediaObjectAnalysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      item?: components['schemas']['Analysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
      mediaObject?: components['schemas']['MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
      description?: string | null
    }
    'MediaObjectAnalysis.jsonld-media_object_join.create': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      item?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      mediaObject?: string
      description?: string | null
    }
    'MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      item?: components['schemas']['StratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      mediaObject?: components['schemas']['MediaObject.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      description?: string | null
    }
    'MediaObjectStratigraphicUnit.jsonld-media_object_join.create': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      item?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      mediaObject?: string
      description?: string | null
    }
    'MicrostratigraphicUnit-microstratigraphic_unit.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-microstratigraphic_unit.acl.read']
      identifier?: string
      notes?: string | null
      readonly code?: string
    }
    'MicrostratigraphicUnit-microstratigraphic_unit.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit?: string
      identifier?: string
      notes?: string | null
    }
    'MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-microstratigraphic_unit.acl.read']
      identifier?: string
      notes?: string | null
      readonly code?: string
    }
    'MicrostratigraphicUnit.jsonld-microstratigraphic_unit.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      identifier: string
      notes?: string | null
    }
    'Pottery-pottery.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-pottery.acl.read']
      inventory?: string
      decorations?: components['schemas']['PotteryDecoration-pottery.acl.read'][]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery-pottery.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit?: string
      inventory?: string
      decorations?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
      inventory?: string
      decorations?: components['schemas']['PotteryDecoration.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read'][]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-pottery.acl.read']
      inventory?: string
      decorations?: components['schemas']['PotteryDecoration.jsonld-pottery.acl.read'][]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm?: string
      notes?: string | null
    }
    'Pottery.jsonld-pottery.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      inventory: string
      decorations?: string[]
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      surfaceTreatment?: string | null
      innerColor?: string | null
      outerColor?: string | null
      decorationMotif?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      shape?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalGroup: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      functionalForm: string
      notes?: string | null
    }
    'PotteryDecoration-pottery.acl.read': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    'PotteryDecoration.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      pottery?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    'PotteryDecoration.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    'PotteryDecoration.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      decoration?: string
    }
    Sample: {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type?: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      sampleStratigraphicUnits?: string[]
      description?: string | null
      readonly code?: string
    }
    'Sample-sample.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample.acl.read']
      type?: components['schemas']['VocSampleType-sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      type?: components['schemas']['VocSampleType-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      type?: components['schemas']['VocSampleType-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      type: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number: number
      sampleStratigraphicUnits?: string[]
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
      type?: components['schemas']['VocSampleType.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample.acl.read']
      type?: components['schemas']['VocSampleType.jsonld-sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      type?: components['schemas']['VocSampleType.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      type?: components['schemas']['VocSampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      readonly code?: string
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      sample?: components['schemas']['Sample-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      sample?: components['schemas']['Sample-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
    }
    'SampleStratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sample: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sample?: components['schemas']['Sample.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read']
    }
    'SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit?: components['schemas']['StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
    }
    SedimentCore: {
      readonly id: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      year: number
      number: number
      sedimentCoresStratigraphicUnits?: string[]
      description?: string | null
      readonly code?: string
    }
    'SedimentCore-sediment_core.acl.read': {
      readonly id: number & string
      site: components['schemas']['Site-sediment_core.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    'SedimentCore-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly id: number & string
      site: components['schemas']['Site-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    'SedimentCore-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      readonly id: number & string
      site: components['schemas']['Site-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    'SedimentCore.jsonld': {
      readonly id: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      year: number
      number: number
      sedimentCoresStratigraphicUnits?: string[]
      description?: string | null
      readonly code?: string
    }
    'SedimentCore.jsonld-sediment_core.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      site: components['schemas']['Site.jsonld-sediment_core.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    'SedimentCore.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      site: components['schemas']['Site.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    'SedimentCore.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id: number & string
      site: components['schemas']['Site.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read']
      year: number
      number: number
      description?: string | null
      readonly code?: string
    }
    SedimentCoreDepth: {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sedimentCore: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
      readonly code?: string
    }
    'SedimentCoreDepth-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly id?: number & string
      sedimentCore: components['schemas']['SedimentCore-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      stratigraphicUnit: components['schemas']['StratigraphicUnit-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
      readonly code?: string
    }
    'SedimentCoreDepth-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      readonly id?: number & string
      sedimentCore: components['schemas']['SedimentCore-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
    }
    'SedimentCoreDepth-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
    }
    'SedimentCoreDepth.jsonld': {
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      sedimentCore: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
      readonly code?: string
    }
    'SedimentCoreDepth.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sedimentCore: components['schemas']['SedimentCore.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
      readonly code?: string
    }
    'SedimentCoreDepth.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      sedimentCore: components['schemas']['SedimentCore.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
    }
    'SedimentCoreDepth.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read']
      /** @example 8.5 */
      depthMin: string
      /** @example 9.0 */
      depthMax: string
      notes?: string | null
    }
    'Site-context.acl.read': {
      code?: string
      name?: string
    }
    'Site-context_stratigraphic_unit.acl.read': {
      code?: string
      name?: string
    }
    'Site-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      code?: string
      name?: string
    }
    'Site-individual.acl.read': {
      code?: string
      name?: string
    }
    'Site-microstratigraphic_unit.acl.read': {
      code?: string
      name?: string
    }
    'Site-pottery.acl.read': {
      code?: string
      name?: string
    }
    'Site-sample.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sediment_core.acl.read': {
      code?: string
      name?: string
    }
    'Site-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      code?: string
      name?: string
    }
    'Site-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site-site.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?: components['schemas']['User-site.acl.read'] | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext-site.acl.read'][]
    }
    'Site-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site-sus.acl.read': {
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?:
        | components['schemas']['User.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
        | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read'][]
    }
    'Site.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-botany_charcoal.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-botany_seed.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-microstratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sediment_core.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
      description?: string | null
      createdBy?: components['schemas']['User.jsonld-site.acl.read'] | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: components['schemas']['SiteCulturalContext.jsonld-site.acl.read'][]
    }
    'Site.jsonld-site.create': {
      code: string
      name: string
      description?: string | null
      chronologyLower?: number | null
      chronologyUpper?: number | null
      fieldDirector?: string | null
      culturalContexts?: string[]
    }
    'Site.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
      createdBy?:
        | components['schemas']['User.jsonld-site_user_privilege.acl.read']
        | null
    }
    'Site.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      code?: string
      name?: string
    }
    'Site.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'Site.jsonld-zoo_tooth.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      name?: string
    }
    'SiteCulturalContext-site.acl.read': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number & string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteCulturalContext.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      culturalContext?: string
    }
    'SiteUserPrivilege-site_user_privilege.update': {
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string
      user?: components['schemas']['User.jsonld-site_user_privilege.acl.read']
      site?: components['schemas']['Site.jsonld-site_user_privilege.acl.read']
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'SiteUserPrivilege.jsonld-site_user_privilege.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      user: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      privilege: number
    }
    'StratigraphicUnit-context_stratigraphic_unit.acl.read': {
      readonly id?: number & string
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-individual.acl.read': {
      site?: components['schemas']['Site-individual.acl.read']
      readonly code: string
    }
    'StratigraphicUnit-microstratigraphic_unit.acl.read': {
      site?: components['schemas']['Site-microstratigraphic_unit.acl.read']
      readonly code: string
    }
    'StratigraphicUnit-pottery.acl.read': {
      site?: components['schemas']['Site-pottery.acl.read']
      readonly code: string
    }
    'StratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit-su.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site?: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
    }
    'StratigraphicUnit-sus.acl.read': {
      readonly id?: number & string
      site?: components['schemas']['Site-sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-botany_charcoal.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-botany_charcoal.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-botany_seed.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-botany_seed.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-individual.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-microstratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-microstratigraphic_unit.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-pottery.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly code: string
    }
    'StratigraphicUnit.jsonld-su.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      site: string
      /**
       * @default 0
       * @example 0
       */
      year: number
      number: number
      description?: string | null
      interpretation?: string | null
    }
    'StratigraphicUnit.jsonld-sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      site?: components['schemas']['Site.jsonld-sus.acl.read']
      /**
       * @default 0
       * @example 0
       */
      year: number
      number?: number
      description?: string | null
      interpretation?: string | null
      readonly code: string
    }
    'StratigraphicUnit.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-zoo_bone.acl.read']
      readonly code: string
    }
    'StratigraphicUnit.jsonld-zoo_tooth.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      site?: components['schemas']['Site.jsonld-zoo_tooth.acl.read']
      readonly code: string
    }
    'StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      lftStratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      relationship: string
      rgtStratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-stratigraphic_unit_relationship.read']
    }
    'StratigraphicUnitRelationship.jsonld-su_relationship.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      lftStratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      relationship: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      rgtStratigraphicUnit: string
    }
    'UniqueValidator.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      criteria?: string[]
      valid?: number
    }
    'User-analysis.acl.read': {
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User-site.acl.read': {
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User-user.change-password': {
      plainPassword: string | null
    }
    'User-user.update': {
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @default true
       * @example true
       */
      enabled: boolean
    }
    'User.UserPasswordChangeInputDto.jsonld': {
      oldPassword: string | null
      plainPassword: string | null
      repeatPassword: string | null
    }
    'User.jsonld-analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-media_object.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly userIdentifier?: string
    }
    'User.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly userIdentifier?: string
    }
    'User.jsonld-site.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-site_user_privilege.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      readonly userIdentifier?: string
    }
    'User.jsonld-user.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @default true
       * @example true
       */
      enabled: boolean
      readonly userIdentifier?: string
    }
    'User.jsonld-user.create': {
      /** Format: email */
      email: string
      plainPassword: string | null
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @default true
       * @example true
       */
      enabled: boolean
    }
    'User.jsonld-user.me.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      /** Format: uuid */
      readonly id?: string | null
      email?: string
      /**
       * @default [
       *       "ROLE_USER"
       *     ]
       * @example [
       *       "ROLE_USER"
       *     ]
       */
      roles: string[]
      /**
       * @default true
       * @example true
       */
      enabled: boolean
      /**
       * @description A map of site IDs (keys) to privilege levels (values).
       * @example {
       *       "1": 1,
       *       "2": 0
       *     }
       */
      readonly sitePrivileges?: {
        [key: string]: number
      }
    }
    'VocAnalysisType-analysis.acl.read': {
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocAnalysisType.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      group?: string
      value?: string
    }
    'VocBotanyElement.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number
      value?: string
    }
    'VocBotanyElementPart.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number
      value?: string
    }
    'VocBotanyTaxonomy.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
      vernacularName?: string
      class?: string
      family?: string | null
    }
    'VocContextType-context.acl.read': {
      group?: string
      value?: string
    }
    'VocContextType-context_stratigraphic_unit.acl.read': {
      group?: string
      value?: string
    }
    'VocContextType-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      group?: string
      value?: string
    }
    'VocContextType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      group?: string
      value?: string
    }
    'VocContextType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'VocContextType.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'VocContextType.jsonld-context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'VocContextType.jsonld-context_stratigraphic_unit.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    'VocContextType.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      group?: string
      value?: string
    }
    /** @description Cultural context vocabulary. */
    'VocCulturalContext.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      id?: number
      value?: string
    }
    'VocIndividualAge.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      id?: number
      value?: string
    }
    'VocMediaObjectType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      group?: string
      value?: string
    }
    'VocPotteryDecoration.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'VocPotteryFunctionalForm.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'VocPotteryFunctionalGroup.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'VocPotteryShape.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'VocPotterySurfaceTreatment.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      value?: string
    }
    'VocSampleType-sample.acl.read': {
      code?: string
      value?: string
    }
    'VocSampleType-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      code?: string
      value?: string
    }
    'VocSampleType-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      code?: string
      value?: string
    }
    'VocSampleType.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
    }
    'VocSampleType.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'VocSampleType.jsonld-sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'VocSampleType.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'VocSampleType.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      code?: string
      value?: string
    }
    'VocStratigraphicUnitRelation.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      id?: string
      value?: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      invertedBy?: string | null
      description?: string | null
    }
    'VocZooBone.jsonld': {
      readonly '@id': Iri
      readonly '@type': string
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly id?: number
      code?: string
      value?: string
    }
    'VocZooBonePart.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
    }
    'VocZooTaxonomy.jsonld': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number
      code?: string
      value?: string
      vernacularName?: string
      class?: string
      family?: string | null
    }
    'ZooBone-zoo_bone.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
    'ZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      side?: string | null
      notes?: string | null
      readonly code?: string
    }
    'ZooBone.jsonld-zoo_bone.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-zoo_bone.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      side?: string | null
      notes?: string | null
      readonly code?: string
    }
    'ZooBone.jsonld-zoo_bone.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      part?: string | null
      endsPreserved?: number | null
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
    'ZooTooth-zoo_tooth.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element: string | null
      connected?: boolean
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
    'ZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly code?: string
    }
    'ZooTooth.jsonld-zoo_tooth.acl.read': {
      readonly '@context'?:
        | string
        | ({
            '@vocab': string
            /** @enum {string} */
            hydra: 'http://www.w3.org/ns/hydra/core#'
          } & {
            [key: string]: unknown
          })
      readonly '@id': Iri
      readonly '@type': string
      readonly id?: number & string
      stratigraphicUnit: components['schemas']['StratigraphicUnit.jsonld-zoo_tooth.acl.read']
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element?: string | null
      connected?: boolean
      side?: string | null
      notes?: string | null
      readonly code?: string
    }
    'ZooTooth.jsonld-zoo_tooth.create': {
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      stratigraphicUnit: string
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      taxonomy: string | null
      /**
       * Format: iri-reference
       * @example https://example.com/
       */
      element: string | null
      connected?: boolean
      /** @enum {string|null} */
      side?: 'L' | 'R' | '?' | null
      notes?: string | null
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  api_dataanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        'order[identifier]'?: 'asc' | 'desc'
        'order[responsible]'?: 'asc' | 'desc'
        'order[status]'?: 'asc' | 'desc'
        'order[laboratory]'?: 'asc' | 'desc'
        'order[summary]'?: 'asc' | 'desc'
        'order[createdBy.email]'?: 'asc' | 'desc'
        type?: string
        'type[]'?: string[]
        year?: number
        'year[]'?: number[]
        'type.group'?: string
        'type.group[]'?: string[]
        'type.code'?: string
        'type.code[]'?: string[]
        identifier?: string
        responsible?: string
        laboratory?: string
        summary?: string
        'createdBy.email'?: string
        'createdBy.email[]'?: string[]
        status?: number
        'status[]'?: number[]
        'mediaObjectsAnalysis.mediaObject.originalFilename'?: string
        'mediaObjectsAnalysis.mediaObject.mimeType'?: string
        'mediaObjectsAnalysis.mediaObject.type.group'?: string
        'mediaObjectsAnalysis.mediaObject.type.group[]'?: string[]
        'mediaObjectsAnalysis.mediaObject.type'?: string
        'mediaObjectsAnalysis.mediaObject.type[]'?: string[]
        'mediaObjectsAnalysis.mediaObject.uploadedBy.email'?: string
        'mediaObjectsAnalysis.mediaObject.uploadDate'?: string
        'mediaObjectsAnalysis.mediaObject.uploadDate[]'?: string
        'year[between]'?: string
        'year[gt]'?: string
        'year[gte]'?: string
        'year[lt]'?: string
        'year[lte]'?: string
        'exists[laboratory]'?: boolean
        'exists[summary]'?: boolean
        'exists[responsible]'?: boolean
        'exists[mediaObjectsAnalysis]'?: boolean
        /**
         * @description Search by analysis type code OR identifier (case insensitive like) if single value, or by analysis type code AND identifier (both conditions must match) if value contains dot. Edge cases: ".identifier" searches only by identifier, "typeCode." searches only by type code. Format: "typeCode.identifier"
         * @example XRF.sample001
         */
        search?: string
        /**
         * @description Filter analyses to only those created by the current user. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Analysis collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Analysis-analysis.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Analysis.jsonld-analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalyses_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Analysis resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Analysis.jsonld-analysis.create']
      }
    }
    responses: {
      /** @description Analysis resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Analysis.jsonld-analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Analysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Analysis resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Analysis.jsonld-analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyses_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Analysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Analysis resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyses_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Analysis identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Analysis resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Analysis-analysis.create']
      }
    }
    responses: {
      /** @description Analysis resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Analysis.jsonld-analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysescontextsbotany_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotany collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysescontextsbotany_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisContextBotany resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisContextBotany.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisContextBotany resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysescontextsbotany_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextBotany identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotany resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysescontextsbotany_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextBotany identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotany resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysescontextsbotany_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextBotany identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisContextBotany resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisContextBotany-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisContextBotany resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdcontextsbotany_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisContextBotany identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotany collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_parentIdanalysesbotany_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisContextBotany identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotany collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextBotany.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_botany_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysis_context_botany_taxonomies_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotanyTaxonomy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextBotanyTaxonomy.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysis_context_botany_taxonomies_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextBotanyTaxonomy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextBotanyTaxonomy resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextBotanyTaxonomy.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysescontextszoo_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZoo collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysescontextszoo_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisContextZoo resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisContextZoo.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisContextZoo resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysescontextszoo_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextZoo identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZoo resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysescontextszoo_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextZoo identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZoo resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysescontextszoo_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextZoo identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisContextZoo resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisContextZoo-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisContextZoo resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdcontextszoo_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisContextZoo identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZoo collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_parentIdanalyseszoo_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.site.code]'?: 'asc' | 'desc'
        'order[subject.name]'?: 'asc' | 'desc'
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.type'?: string
        'subject.type[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit[]'?: string[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[subject.contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        'exists[subject.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.name'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.contextStratigraphicUnits.stratigraphicUnit.description'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisContextZoo identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZoo collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextZoo.jsonld-analysis_join.acl.read_analysis.acl.read_context.acl.read_context_zoo_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysis_context_zoo_taxonomies_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZooTaxonomy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisContextZooTaxonomy.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysis_context_zoo_taxonomies_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisContextZooTaxonomy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisContextZooTaxonomy resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisContextZooTaxonomy.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysesindividuals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.sex'?: string
        'subject.sex[]'?: string[]
        'subject.identifier'?: string
        'subject.age.id'?: number
        'subject.age.id[]'?: number[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.age]'?: boolean
        'exists[subject.sex]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisIndividual collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysesindividuals_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisIndividual resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisIndividual.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisIndividual resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysesindividuals_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisIndividual identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisIndividual resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysesindividuals_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisIndividual identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisIndividual resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysesindividuals_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisIndividual identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisIndividual resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisIndividual-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisIndividual resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdindividuals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.sex'?: string
        'subject.sex[]'?: string[]
        'subject.identifier'?: string
        'subject.age.id'?: number
        'subject.age.id[]'?: number[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.age]'?: boolean
        'exists[subject.sex]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisIndividual identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisIndividual collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataindividuals_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.sex'?: string
        'subject.sex[]'?: string[]
        'subject.identifier'?: string
        'subject.age.id'?: number
        'subject.age.id[]'?: number[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.age]'?: boolean
        'exists[subject.sex]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisIndividual identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisIndividual collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisIndividual.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_individual.acl.read_individual.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysespotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.inventory]'?: 'asc' | 'desc'
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.decorations.decoration'?: string
        'subject.decorations.decoration[]'?: string[]
        'subject.inventory'?: string
        'subject.culturalContext'?: string
        'subject.culturalContext[]'?: string[]
        'subject.chronologyLower'?: number
        'subject.chronologyLower[]'?: number[]
        'subject.chronologyUpper'?: number
        'subject.chronologyUpper[]'?: number[]
        'subject.shape'?: string
        'subject.shape[]'?: string[]
        'subject.functionalGroup'?: string
        'subject.functionalGroup[]'?: string[]
        'subject.functionalForm'?: string
        'subject.functionalForm[]'?: string[]
        'subject.notes'?: string
        'subject.surfaceTreatment'?: string
        'subject.surfaceTreatment[]'?: string[]
        'subject.innerColor'?: string
        'subject.outerColor'?: string
        'subject.decorationMotif'?: string
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'subject.chronologyLower[between]'?: string
        'subject.chronologyLower[gt]'?: string
        'subject.chronologyLower[gte]'?: string
        'subject.chronologyLower[lt]'?: string
        'subject.chronologyLower[lte]'?: string
        'subject.chronologyUpper[between]'?: string
        'subject.chronologyUpper[gt]'?: string
        'subject.chronologyUpper[gte]'?: string
        'subject.chronologyUpper[lt]'?: string
        'subject.chronologyUpper[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.culturalContext]'?: boolean
        'exists[subject.chronologyLower]'?: boolean
        'exists[subject.chronologyUpper]'?: boolean
        'exists[subject.innerColor]'?: boolean
        'exists[subject.outerColor]'?: boolean
        'exists[subject.decorationMotif]'?: boolean
        'exists[subject.shape]'?: boolean
        'exists[subject.surfaceTreatment]'?: boolean
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisPottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysespotteries_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisPottery resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisPottery.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisPottery resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysespotteries_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisPottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisPottery resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysespotteries_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisPottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisPottery resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysespotteries_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisPottery identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisPottery resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisPottery-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisPottery resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdpotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.inventory]'?: 'asc' | 'desc'
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.decorations.decoration'?: string
        'subject.decorations.decoration[]'?: string[]
        'subject.inventory'?: string
        'subject.culturalContext'?: string
        'subject.culturalContext[]'?: string[]
        'subject.chronologyLower'?: number
        'subject.chronologyLower[]'?: number[]
        'subject.chronologyUpper'?: number
        'subject.chronologyUpper[]'?: number[]
        'subject.shape'?: string
        'subject.shape[]'?: string[]
        'subject.functionalGroup'?: string
        'subject.functionalGroup[]'?: string[]
        'subject.functionalForm'?: string
        'subject.functionalForm[]'?: string[]
        'subject.notes'?: string
        'subject.surfaceTreatment'?: string
        'subject.surfaceTreatment[]'?: string[]
        'subject.innerColor'?: string
        'subject.outerColor'?: string
        'subject.decorationMotif'?: string
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'subject.chronologyLower[between]'?: string
        'subject.chronologyLower[gt]'?: string
        'subject.chronologyLower[gte]'?: string
        'subject.chronologyLower[lt]'?: string
        'subject.chronologyLower[lte]'?: string
        'subject.chronologyUpper[between]'?: string
        'subject.chronologyUpper[gt]'?: string
        'subject.chronologyUpper[gte]'?: string
        'subject.chronologyUpper[lt]'?: string
        'subject.chronologyUpper[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.culturalContext]'?: boolean
        'exists[subject.chronologyLower]'?: boolean
        'exists[subject.chronologyUpper]'?: boolean
        'exists[subject.innerColor]'?: boolean
        'exists[subject.outerColor]'?: boolean
        'exists[subject.decorationMotif]'?: boolean
        'exists[subject.shape]'?: boolean
        'exists[subject.surfaceTreatment]'?: boolean
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisPottery identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisPottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapotteries_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[subject.inventory]'?: 'asc' | 'desc'
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.decorations.decoration'?: string
        'subject.decorations.decoration[]'?: string[]
        'subject.inventory'?: string
        'subject.culturalContext'?: string
        'subject.culturalContext[]'?: string[]
        'subject.chronologyLower'?: number
        'subject.chronologyLower[]'?: number[]
        'subject.chronologyUpper'?: number
        'subject.chronologyUpper[]'?: number[]
        'subject.shape'?: string
        'subject.shape[]'?: string[]
        'subject.functionalGroup'?: string
        'subject.functionalGroup[]'?: string[]
        'subject.functionalForm'?: string
        'subject.functionalForm[]'?: string[]
        'subject.notes'?: string
        'subject.surfaceTreatment'?: string
        'subject.surfaceTreatment[]'?: string[]
        'subject.innerColor'?: string
        'subject.outerColor'?: string
        'subject.decorationMotif'?: string
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'subject.chronologyLower[between]'?: string
        'subject.chronologyLower[gt]'?: string
        'subject.chronologyLower[gte]'?: string
        'subject.chronologyLower[lt]'?: string
        'subject.chronologyLower[lte]'?: string
        'subject.chronologyUpper[between]'?: string
        'subject.chronologyUpper[gt]'?: string
        'subject.chronologyUpper[gte]'?: string
        'subject.chronologyUpper[lt]'?: string
        'subject.chronologyUpper[lte]'?: string
        'exists[subject.notes]'?: boolean
        'exists[subject.culturalContext]'?: boolean
        'exists[subject.chronologyLower]'?: boolean
        'exists[subject.chronologyUpper]'?: boolean
        'exists[subject.innerColor]'?: boolean
        'exists[subject.outerColor]'?: boolean
        'exists[subject.decorationMotif]'?: boolean
        'exists[subject.shape]'?: boolean
        'exists[subject.surfaceTreatment]'?: boolean
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisPottery identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisPottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisPottery.jsonld-analysis_join.acl.read_analysis.acl.read_analysis_pottery.acl.read_pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysessamplesmicrostratigraphy_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSampleMicrostratigraphy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysessamplesmicrostratigraphy_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisSampleMicrostratigraphy resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisSampleMicrostratigraphy resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysessamplesmicrostratigraphy_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSampleMicrostratigraphy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSampleMicrostratigraphy resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysessamplesmicrostratigraphy_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSampleMicrostratigraphy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSampleMicrostratigraphy resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysessamplesmicrostratigraphy_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSampleMicrostratigraphy identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisSampleMicrostratigraphy resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisSampleMicrostratigraphy-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisSampleMicrostratigraphy resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdsamplesmicrostratigraphy_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisSampleMicrostratigraphy identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSampleMicrostratigraphy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamplesmicrostratigraphy_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.site'?: string
        'subject.site[]'?: string[]
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'subject.sampleStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisSampleMicrostratigraphy identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSampleMicrostratigraphy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSampleMicrostratigraphy.jsonld-analysis_join.acl.read_analysis.acl.read_sample.acl.read_sample_microstratigraphy_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysessitesanthropology_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        subject?: string
        'subject[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSiteAnthropology collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalysessitesanthropology_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisSiteAnthropology resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisSiteAnthropology resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalysessitesanthropology_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSiteAnthropology identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSiteAnthropology resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysessitesanthropology_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSiteAnthropology identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSiteAnthropology resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalysessitesanthropology_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisSiteAnthropology identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisSiteAnthropology resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisSiteAnthropology-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisSiteAnthropology resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdsitesanthropology_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        subject?: string
        'subject[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisSiteAnthropology identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSiteAnthropology collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasitesanthropology_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        subject?: string
        'subject[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.description'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'subject.sampleStratigraphicUnits.stratigraphicUnit.microstratigraphicUnit.notes'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisSiteAnthropology identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisSiteAnthropology collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisSiteAnthropology.jsonld-analysis_join.acl.read_analysis.acl.read_site.acl.read_site_anthropology.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalyseszoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.part'?: string
        'subject.part[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalyseszoobones_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisZooBone resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisZooBone.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisZooBone resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyseszoobones_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooBone resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyseszoobones_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooBone resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyseszoobones_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooBone identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisZooBone resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisZooBone-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisZooBone resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdzoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.part'?: string
        'subject.part[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisZooBone identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazoobones_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.part'?: string
        'subject.part[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        'subject.stratigraphicUnit.number[between]'?: string
        'subject.stratigraphicUnit.number[gt]'?: string
        'subject.stratigraphicUnit.number[gte]'?: string
        'subject.stratigraphicUnit.number[lt]'?: string
        'subject.stratigraphicUnit.number[lte]'?: string
        'subject.stratigraphicUnit.year[between]'?: string
        'subject.stratigraphicUnit.year[gt]'?: string
        'subject.stratigraphicUnit.year[gte]'?: string
        'subject.stratigraphicUnit.year[lt]'?: string
        'subject.stratigraphicUnit.year[lte]'?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisZooBone identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooBone.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_bone_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalyseszooteeth_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooTooth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataanalyseszooteeth_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new AnalysisZooTooth resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['AnalysisZooTooth.jsonld-analysis_join.create']
      }
    }
    responses: {
      /** @description AnalysisZooTooth resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyseszooteeth_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooTooth resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyseszooteeth_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooTooth resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyseszooteeth_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description AnalysisZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated AnalysisZooTooth resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['AnalysisZooTooth-analysis_join.update']
      }
    }
    responses: {
      /** @description AnalysisZooTooth resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataanalyses_parentIdzooteeth_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisZooTooth identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooTooth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazooteeth_parentIdanalyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'subject.stratigraphicUnit.site'?: string
        'subject.stratigraphicUnit.site[]'?: string[]
        'subject.stratigraphicUnit'?: string
        'subject.stratigraphicUnit[]'?: string[]
        'subject.element'?: string
        'subject.element[]'?: string[]
        'subject.side'?: string
        'subject.side[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        summary?: string
        'order[id]'?: 'asc' | 'desc'
        'order[analysis.type.group]'?: 'asc' | 'desc'
        'order[analysis.type.value]'?: 'asc' | 'desc'
        'order[analysis.identifier]'?: 'asc' | 'desc'
        'analysis.type'?: string
        'analysis.type[]'?: string[]
        'exists[summary]'?: boolean
        'exists[analysis.summary]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'analysis.name'?: string
      }
      header?: never
      path: {
        /** @description AnalysisZooTooth identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description AnalysisZooTooth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['AnalysisZooTooth.jsonld-analysis_join.acl.read_analysis.acl.read_zoo_bone.acl.read_zoo_tooth_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_databotanycharcoals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanyCharcoal collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_databotanycharcoals_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new BotanyCharcoal resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.create']
      }
    }
    responses: {
      /** @description BotanyCharcoal resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_databotanycharcoals_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanyCharcoal identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanyCharcoal resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_databotanycharcoals_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanyCharcoal identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanyCharcoal resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_databotanycharcoals_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanyCharcoal identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated BotanyCharcoal resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['BotanyCharcoal-botany_charcoal.create']
      }
    }
    responses: {
      /** @description BotanyCharcoal resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdbotanycharcoals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
      }
      header?: never
      path: {
        /** @description BotanyCharcoal identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanyCharcoal collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['BotanyCharcoal.jsonld-botany_charcoal.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_databotanyseeds_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanySeed collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['BotanySeed.jsonld-botany_seed.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_databotanyseeds_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new BotanySeed resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['BotanySeed.jsonld-botany_seed.create']
      }
    }
    responses: {
      /** @description BotanySeed resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanySeed.jsonld-botany_seed.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_databotanyseeds_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanySeed identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanySeed resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanySeed.jsonld-botany_seed.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_databotanyseeds_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanySeed identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanySeed resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_databotanyseeds_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description BotanySeed identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated BotanySeed resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['BotanySeed-botany_seed.create']
      }
    }
    responses: {
      /** @description BotanySeed resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['BotanySeed.jsonld-botany_seed.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdbotanyseeds_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
      }
      header?: never
      path: {
        /** @description BotanySeed identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description BotanySeed collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['BotanySeed.jsonld-botany_seed.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[description]'?: boolean
        'exists[contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.description'?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Context-context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontexts_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Context resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Context.jsonld-context.create']
      }
    }
    responses: {
      /** @description Context resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Context identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Context resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Context-context.create']
      }
    }
    responses: {
      /** @description Context resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Context.jsonld-context.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'contextStratigraphicUnits.stratigraphicUnit.year'?: number
        'contextStratigraphicUnits.stratigraphicUnit.year[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.number'?: number
        'contextStratigraphicUnits.stratigraphicUnit.number[]'?: number[]
        'contextStratigraphicUnits.stratigraphicUnit.year[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.year[lte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[between]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[gte]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lt]'?: string
        'contextStratigraphicUnits.stratigraphicUnit.number[lte]'?: string
        'exists[description]'?: boolean
        'exists[contextStratigraphicUnits.stratigraphicUnit.description]'?: boolean
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.interpretation'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        'contextStratigraphicUnits.stratigraphicUnit.description'?: string
        /**
         * @description Search by name (case insensitive like) if single value, or by site code end AND name (both conditions must match) if value contains dot. Edge cases: ".name" searches only by name, "code." searches only by site code. Format: "siteCode.namePattern"
         * @example TO.fill 90
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Context identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Context collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Context-context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Context.jsonld-context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextStratigraphicUnit-context_stratigraphic_unit.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ContextStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description ContextStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontext_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datacontexts_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdcontexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[context.name]'?: 'asc' | 'desc'
        'order[context.type.group]'?: 'asc' | 'desc'
        'order[context.type.value]'?: 'asc' | 'desc'
        'order[context.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description ContextStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ContextStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['ContextStratigraphicUnit-context_stratigraphic_unit.contexts.acl.read_context.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['ContextStratigraphicUnit.jsonld-context_stratigraphic_unit.contexts.acl.read_context.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataindividuals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[identifier]'?: 'asc' | 'desc'
        'order[sex]'?: 'asc' | 'desc'
        'order[age.id]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Individual collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Individual-individual.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Individual.jsonld-individual.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_dataindividuals_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Individual resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Individual.jsonld-individual.create']
      }
    }
    responses: {
      /** @description Individual resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Individual.jsonld-individual.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_dataindividuals_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Individual identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Individual resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Individual.jsonld-individual.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataindividuals_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Individual identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Individual resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataindividuals_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Individual identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Individual resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Individual-individual.create']
      }
    }
    responses: {
      /** @description Individual resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Individual.jsonld-individual.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdindividuals_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[identifier]'?: 'asc' | 'desc'
        'order[sex]'?: 'asc' | 'desc'
        'order[age.id]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description Individual identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Individual collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Individual-individual.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Individual.jsonld-individual.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  login_check_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The login data */
    requestBody: {
      content: {
        'application/json': {
          email: string
          password: string
        }
      }
    }
    responses: {
      /** @description User token created */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            readonly token: string
          }
        }
      }
    }
  }
  api_datamedia_objects_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[mimeType]'?: 'asc' | 'desc'
        'order[originalFilename]'?: 'asc' | 'desc'
        'order[sha256]'?: 'asc' | 'desc'
        'order[type.group]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        'order[size]'?: 'asc' | 'desc'
        'order[description]'?: 'asc' | 'desc'
        'order[uploadedBy.email]'?: 'asc' | 'desc'
        'order[uploadDate]'?: 'asc' | 'desc'
        sha256?: string
        'sha256[]'?: string[]
        originalFilename?: string
        mimeType?: string
        'type.group'?: string
        'type.group[]'?: string[]
        type?: string
        'type[]'?: string[]
        description?: string
        'uploadedBy.email'?: string
        uploadDate?: string
        'uploadDate[]'?: string
        'size[between]'?: string
        'size[gt]'?: string
        'size[gte]'?: string
        'size[lt]'?: string
        'size[lte]'?: string
        'uploadDate[between]'?: string
        'uploadDate[gt]'?: string
        'uploadDate[gte]'?: string
        'uploadDate[lt]'?: string
        'uploadDate[lte]'?: string
        'exists[description]'?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObject.jsonld-media_object.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamedia_objects_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MediaObject resource */
    requestBody: {
      content: {
        'multipart/form-data': {
          /** Format: binary */
          file: string
          /**
           * Format: iri-reference
           * @example /api/vocabulary/media_object/types/1
           */
          type: string
          description?: string
        }
      }
    }
    responses: {
      /** @description MediaObject resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_objects_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_objects_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_objects_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated MediaObject resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['MediaObject-media_object.update']
      }
    }
    responses: {
      /** @description MediaObject resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_objects_sha256_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObject identifier */
        sha256: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObject resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObject.jsonld-media_object.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_dataanalyses_parentIdmedia_objects_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description MediaObjectAnalysis identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectAnalysis collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectAnalysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamedia_object_analyses_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectAnalysis collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectAnalysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamedia_object_analyses_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MediaObjectAnalysis resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['MediaObjectAnalysis.jsonld-media_object_join.create']
      }
    }
    responses: {
      /** @description MediaObjectAnalysis resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectAnalysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_object_analyses_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectAnalysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectAnalysis resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectAnalysis.jsonld-media_object_join.acl.read_media_object.acl.read_analysis.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_object_analyses_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectAnalysis identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectAnalysis resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MediaObjectStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.create']
      }
    }
    responses: {
      /** @description MediaObjectStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamedia_object_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdmedia_objects_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path: {
        /** @description MediaObjectStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MediaObjectStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['MediaObjectStratigraphicUnit.jsonld-media_object_join.acl.read_media_object.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamicrostratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[identifier]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MicrostratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['MicrostratigraphicUnit-microstratigraphic_unit.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datamicrostratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new MicrostratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.create']
      }
    }
    responses: {
      /** @description MicrostratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datamicrostratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MicrostratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MicrostratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamicrostratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MicrostratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MicrostratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datamicrostratigraphic_units_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description MicrostratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated MicrostratigraphicUnit resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['MicrostratigraphicUnit-microstratigraphic_unit.create']
      }
    }
    responses: {
      /** @description MicrostratigraphicUnit resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdmicrostratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[identifier]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description MicrostratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description MicrostratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['MicrostratigraphicUnit-microstratigraphic_unit.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['MicrostratigraphicUnit.jsonld-microstratigraphic_unit.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[inventory]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        'order[culturalContext.id]'?: 'asc' | 'desc'
        'order[shape.value]'?: 'asc' | 'desc'
        'order[functionalGroup.value]'?: 'asc' | 'desc'
        'order[functionalForm.value]'?: 'asc' | 'desc'
        'order[surfaceTreatment.value]'?: 'asc' | 'desc'
        'order[innerColor]'?: 'asc' | 'desc'
        'order[outerColor]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        'decorations.decoration'?: string
        'decorations.decoration[]'?: string[]
        inventory?: string
        culturalContext?: string
        'culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        shape?: string
        'shape[]'?: string[]
        functionalGroup?: string
        'functionalGroup[]'?: string[]
        functionalForm?: string
        'functionalForm[]'?: string[]
        notes?: string
        surfaceTreatment?: string
        'surfaceTreatment[]'?: string[]
        innerColor?: string
        outerColor?: string
        decorationMotif?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        'exists[notes]'?: boolean
        'exists[culturalContext]'?: boolean
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[innerColor]'?: boolean
        'exists[outerColor]'?: boolean
        'exists[decorationMotif]'?: boolean
        'exists[shape]'?: boolean
        'exists[surfaceTreatment]'?: boolean
        /** @description Search case insensitive match the inventory field */
        search?: string
        /**
         * @description Filter entries to only those from SU belonging to sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Pottery-pottery.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Pottery.jsonld-pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapotteries_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Pottery resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Pottery.jsonld-pottery.create']
      }
    }
    responses: {
      /** @description Pottery resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datapotteries_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datapotteries_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datapotteries_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Pottery identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Pottery resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Pottery-pottery.create']
      }
    }
    responses: {
      /** @description Pottery resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Pottery.jsonld-pottery.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdpotteries_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[inventory]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        'order[culturalContext.id]'?: 'asc' | 'desc'
        'order[shape.value]'?: 'asc' | 'desc'
        'order[functionalGroup.value]'?: 'asc' | 'desc'
        'order[functionalForm.value]'?: 'asc' | 'desc'
        'order[surfaceTreatment.value]'?: 'asc' | 'desc'
        'order[innerColor]'?: 'asc' | 'desc'
        'order[outerColor]'?: 'asc' | 'desc'
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        'decorations.decoration'?: string
        'decorations.decoration[]'?: string[]
        inventory?: string
        culturalContext?: string
        'culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        shape?: string
        'shape[]'?: string[]
        functionalGroup?: string
        'functionalGroup[]'?: string[]
        functionalForm?: string
        'functionalForm[]'?: string[]
        notes?: string
        surfaceTreatment?: string
        'surfaceTreatment[]'?: string[]
        innerColor?: string
        outerColor?: string
        decorationMotif?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        'exists[notes]'?: boolean
        'exists[culturalContext]'?: boolean
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[innerColor]'?: boolean
        'exists[outerColor]'?: boolean
        'exists[decorationMotif]'?: boolean
        'exists[shape]'?: boolean
        'exists[surfaceTreatment]'?: boolean
        /** @description Search case insensitive match the inventory field */
        search?: string
        /**
         * @description Filter entries to only those from SU belonging to sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Pottery identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Pottery collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Pottery-pottery.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Pottery.jsonld-pottery.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapottery_decorations_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryDecoration collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['PotteryDecoration.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datapottery_decorations_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description PotteryDecoration identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description PotteryDecoration resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['PotteryDecoration.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[type.code]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'sampleStratigraphicUnits.stratigraphicUnit'?: string
        'sampleStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Sample-sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Sample.jsonld-sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasamples_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Sample resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Sample.jsonld']
      }
    }
    responses: {
      /** @description Sample resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasamples_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Sample identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Sample resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Sample']
      }
    }
    responses: {
      /** @description Sample resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Sample.jsonld-sample.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[type.code]'?: 'asc' | 'desc'
        'order[type.value]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        type?: string
        'type[]'?: string[]
        'sampleStratigraphicUnits.stratigraphicUnit'?: string
        'sampleStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description Sample identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sample collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Sample-sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Sample.jsonld-sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasample_stratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasample_stratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SampleStratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld']
      }
    }
    responses: {
      /** @description SampleStratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasample_stratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.acl.read_sample.acl.read_sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasample_stratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasamples_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdsamples_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[sample.year]'?: 'asc' | 'desc'
        'order[sample.number]'?: 'asc' | 'desc'
        'order[sample.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SampleStratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SampleStratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SampleStratigraphicUnit-sample_stratigraphic_unit.samples.acl.read_sample.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SampleStratigraphicUnit.jsonld-sample_stratigraphic_unit.samples.acl.read_sample.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasediment_cores_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'sedimentCoresStratigraphicUnits.stratigraphicUnit'?: string
        'sedimentCoresStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCore collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SedimentCore-sediment_core.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SedimentCore.jsonld-sediment_core.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasediment_cores_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SedimentCore resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SedimentCore.jsonld']
      }
    }
    responses: {
      /** @description SedimentCore resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCore.jsonld-sediment_core.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasediment_cores_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCore identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCore resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCore.jsonld-sediment_core.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasediment_cores_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCore identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCore resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasediment_cores_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCore identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated SedimentCore resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['SedimentCore']
      }
    }
    responses: {
      /** @description SedimentCore resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCore.jsonld-sediment_core.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_parentIdsediment_cores_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'sedimentCoresStratigraphicUnits.stratigraphicUnit'?: string
        'sedimentCoresStratigraphicUnits.stratigraphicUnit[]'?: string[]
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Smart search for samples. Supports flexible input patterns: single values (site code or sample number), two values (site+type codes, year+number, or site+number), three values (site+type+number), or four values (site+type+year+number). Use any non-word characters as separators (spaces, dots, hyphens, etc.).
         * @example ME.GE.34.93
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description SedimentCore identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCore collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SedimentCore-sediment_core.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SedimentCore.jsonld-sediment_core.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasediment_core_depths_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[depthMin]'?: 'asc' | 'desc'
        'order[depthMax]'?: 'asc' | 'desc'
        'order[sedimentCore.year]'?: 'asc' | 'desc'
        'order[sedimentCore.number]'?: 'asc' | 'desc'
        'order[sedimentCore.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCoreDepth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SedimentCoreDepth-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasediment_core_depths_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SedimentCoreDepth resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SedimentCoreDepth.jsonld']
      }
    }
    responses: {
      /** @description SedimentCoreDepth resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasediment_core_depths_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCoreDepth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCoreDepth resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasediment_core_depths_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCoreDepth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCoreDepth resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasediment_core_depths_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SedimentCoreDepth identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated SedimentCoreDepth resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['SedimentCoreDepth']
      }
    }
    responses: {
      /** @description SedimentCoreDepth resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.acl.read_sediment_core.acl.read_sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasediment_cores_parentIdstratigraphic_unitsdepths_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[depthMin]'?: 'asc' | 'desc'
        'order[depthMax]'?: 'asc' | 'desc'
        'order[sedimentCore.year]'?: 'asc' | 'desc'
        'order[sedimentCore.number]'?: 'asc' | 'desc'
        'order[sedimentCore.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SedimentCoreDepth identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCoreDepth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SedimentCoreDepth-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.stratigraphic_units.acl.read_sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdsediment_coresdepths_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[depthMin]'?: 'asc' | 'desc'
        'order[depthMax]'?: 'asc' | 'desc'
        'order[sedimentCore.year]'?: 'asc' | 'desc'
        'order[sedimentCore.number]'?: 'asc' | 'desc'
        'order[sedimentCore.site.code]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.year]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.number]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SedimentCoreDepth identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SedimentCoreDepth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['SedimentCoreDepth-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['SedimentCoreDepth.jsonld-sediment_core_depth.sediment_cores.acl.read_sediment_core.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasites_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[code]'?: 'asc' | 'desc'
        'order[name]'?: 'asc' | 'desc'
        'order[chronologyLower]'?: 'asc' | 'desc'
        'order[chronologyUpper]'?: 'asc' | 'desc'
        code?: string
        'code[]'?: string[]
        'culturalContexts.culturalContext'?: string
        'culturalContexts.culturalContext[]'?: string[]
        chronologyLower?: number
        'chronologyLower[]'?: number[]
        chronologyUpper?: number
        'chronologyUpper[]'?: number[]
        'chronologyLower[between]'?: string
        'chronologyLower[gt]'?: string
        'chronologyLower[gte]'?: string
        'chronologyLower[lt]'?: string
        'chronologyLower[lte]'?: string
        'chronologyUpper[between]'?: string
        'chronologyUpper[gt]'?: string
        'chronologyUpper[gte]'?: string
        'chronologyUpper[lt]'?: string
        'chronologyUpper[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        name?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        fieldDirector?: string
        'exists[chronologyLower]'?: boolean
        'exists[chronologyUpper]'?: boolean
        'exists[description]'?: boolean
        'exists[fieldDirector]'?: boolean
        'exists[culturalContexts]'?: boolean
        /**
         * @description Search case insensitive match across code (starts with) and name (contains). Up to two characters only code is matched.
         * @example me
         */
        search?: string
        /**
         * @description Filter sites to only those where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['Site-site.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['Site.jsonld-site.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasites_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new Site resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['Site.jsonld-site.create']
      }
    }
    responses: {
      /** @description Site resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasites_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Site resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Site identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated Site resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['Site-site.create']
      }
    }
    responses: {
      /** @description Site resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Site.jsonld-site.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datasite_cultural_contexts_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteCulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datasite_cultural_contexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteCulturalContext identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteCulturalContext resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteCulturalContext.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.create']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsite_user_privileges_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated SiteUserPrivilege resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['SiteUserPrivilege-site_user_privilege.update']
      }
    }
    responses: {
      /** @description SiteUserPrivilege resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminsites_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusersmesite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        'order[user.email]'?: 'asc' | 'desc'
        'order[privilege]'?: 'asc' | 'desc'
      }
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_parentIdsite_user_privileges_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description SiteUserPrivilege identifier */
        parentId: string
        /** @description SiteUserPrivilege identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description SiteUserPrivilege resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['SiteUserPrivilege.jsonld-site_user_privilege.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datasites_parentIdstratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'stratigraphicUnitContexts.context'?: string
        'stratigraphicUnitContexts.context[]'?: string[]
        'stratigraphicUnitSamples.sample'?: string
        'stratigraphicUnitSamples.sample[]'?: string[]
        'stratigraphicUnitContexts.context.name'?: string
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        'number[between]'?: string
        'number[gt]'?: string
        'number[gte]'?: string
        'number[lt]'?: string
        'number[lte]'?: string
        'year[between]'?: string
        'year[gt]'?: string
        'year[gte]'?: string
        'year[lt]'?: string
        'year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        interpretation?: string
        'exists[description]'?: boolean
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['StratigraphicUnit-sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[year]'?: 'asc' | 'desc'
        'order[number]'?: 'asc' | 'desc'
        'order[site.code]'?: 'asc' | 'desc'
        site?: string
        'site[]'?: string[]
        'stratigraphicUnitContexts.context'?: string
        'stratigraphicUnitContexts.context[]'?: string[]
        'stratigraphicUnitSamples.sample'?: string
        'stratigraphicUnitSamples.sample[]'?: string[]
        'stratigraphicUnitContexts.context.name'?: string
        number?: number
        'number[]'?: number[]
        year?: number
        'year[]'?: number[]
        'number[between]'?: string
        'number[gt]'?: string
        'number[gte]'?: string
        'number[lt]'?: string
        'number[lte]'?: string
        'year[between]'?: string
        'year[gt]'?: string
        'year[gte]'?: string
        'year[lt]'?: string
        'year[lte]'?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        description?: string
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        interpretation?: string
        'exists[description]'?: boolean
        /**
         * @description Search stratigraphic units by splitting input on non-word characters. Supports: 1 chunk (site code or number), 2 chunks (site+number or year+number), 3+ chunks (site+year+number). Invalid combinations return empty results.
         * @example 2025 123
         */
        search?: string
        /**
         * @description Filter sample to only those from sites where the current user has privileges. If no user is authenticated, returns empty set.
         * @example true
         */
        granted?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/csv': components['schemas']['StratigraphicUnit-sus.acl.read'][]
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnit.jsonld-sus.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_units_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-su.create']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnit resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnit identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated StratigraphicUnit resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['StratigraphicUnit-su.create']
      }
    }
    responses: {
      /** @description StratigraphicUnit resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnit.jsonld-sus.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new StratigraphicUnitRelationship resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-su_relationship.create']
      }
    }
    responses: {
      /** @description StratigraphicUnitRelationship resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_unit_relationships_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdrelationships_get_collection: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description StratigraphicUnitRelationship identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description StratigraphicUnitRelationship collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['StratigraphicUnitRelationship.jsonld-stratigraphic_unit_relationship.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_validatoruniqueanalyses_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysescontextsbotany_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysescontextszoo_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysesindividuals_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysespotteries_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysessamplesmicrostratigraphy_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalysessitesanthropology_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalyseszoobones_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueanalyseszooteeth_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontext_stratigraphic_units_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquecontexts_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniqueindividualsidentifier_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquemedia_objectsanalyses_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquemedia_objectssha256_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquemedia_objectsstratigraphic_units_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquemicrostratigraphic_units_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquepotteriesinventory_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesample_stratigraphic_units_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesamples_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesediment_core_depths_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesediment_cores_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesite_user_privileges_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitescode_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquesitesname_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquestratigraphic_unit_relationships_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_validatoruniquestratigraphic_units_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description UniqueValidator resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['UniqueValidator.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[email]'?: 'asc' | 'desc'
        /**
         * @description Search case insensitive match the email field
         * @example me
         */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['User.jsonld-user.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.jsonld-user.create']
      }
    }
    responses: {
      /** @description User resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusersmechange_password_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new User resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['User.UserPasswordChangeInputDto.jsonld']
      }
    }
    responses: {
      /** @description User resource created */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_adminusers_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.update']
      }
    }
    responses: {
      /** @description User resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_adminusers_idchange_password_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description User identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated User resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['User-user.change-password']
      }
    }
    responses: {
      /** @description User resource updated */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': unknown
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_usersme_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description User resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['User.jsonld-user.me.read']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyanalysistypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocAnalysisType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocAnalysisType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyanalysistypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocAnalysisType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocAnalysisType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocAnalysisType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularybotanyelements_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyElement collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocBotanyElement.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularybotanyelements_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocBotanyElement identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyElement resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocBotanyElement.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularybotanyelement_parts_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyElementPart collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocBotanyElementPart.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularybotanyelement_parts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocBotanyElementPart identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyElementPart resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocBotanyElementPart.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularybotanytaxonomies_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyTaxonomy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocBotanyTaxonomy.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularybotanytaxonomies_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocBotanyTaxonomy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocBotanyTaxonomy resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocBotanyTaxonomy.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularycontexttypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocContextType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocContextType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycontexttypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocContextType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocContextType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocContextType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularycultural_contexts_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocCulturalContext collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocCulturalContext.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularycultural_contexts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocCulturalContext identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocCulturalContext resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocCulturalContext.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyindividualage_get_collection: {
    parameters: {
      query?: {
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocIndividualAge collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocIndividualAge.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyindividualage_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocIndividualAge identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocIndividualAge resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocIndividualAge.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularymedia_objecttypes_get_collection: {
    parameters: {
      query?: {
        /** @description Search case insensitive match across group and value fields */
        search?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocMediaObjectType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocMediaObjectType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularymedia_objecttypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocMediaObjectType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocMediaObjectType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocMediaObjectType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotterydecorations_get_collection: {
    parameters: {
      query?: {
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryDecoration collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocPotteryDecoration.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotterydecorations_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocPotteryDecoration identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryDecoration resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocPotteryDecoration.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryfunctional_forms_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryFunctionalForm collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocPotteryFunctionalForm.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryfunctional_forms_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocPotteryFunctionalForm identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryFunctionalForm resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocPotteryFunctionalForm.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryfunctional_groups_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryFunctionalGroup collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocPotteryFunctionalGroup.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryfunctional_groups_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocPotteryFunctionalGroup identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryFunctionalGroup resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocPotteryFunctionalGroup.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotteryshapes_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryShape collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocPotteryShape.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotteryshapes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocPotteryShape identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotteryShape resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocPotteryShape.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularypotterysurface_treatments_get_collection: {
    parameters: {
      query?: {
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotterySurfaceTreatment collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocPotterySurfaceTreatment.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularypotterysurface_treatments_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocPotterySurfaceTreatment identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocPotterySurfaceTreatment resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocPotterySurfaceTreatment.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularysampletypes_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter using case insensitive unaccented string matching
         * @example cafè
         */
        value?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocSampleType collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocSampleType.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularysampletypes_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocSampleType identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocSampleType resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocSampleType.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularystratigraphic_unitrelationships_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocStratigraphicUnitRelation collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocStratigraphicUnitRelation.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularystratigraphic_unitrelationships_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocStratigraphicUnitRelation identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocStratigraphicUnitRelation resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocStratigraphicUnitRelation.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzoobones_get_collection: {
    parameters: {
      query?: {
        /**
         * @description Filter by teeth - when true, shows only items with code MAX or N
         * @example true
         */
        teeth?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooBone.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzoobones_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBone resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooBone.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzoobone_parts_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBonePart collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooBonePart.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzoobone_parts_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooBonePart identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooBonePart resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooBonePart.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_vocabularyzootaxonomies_get_collection: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooTaxonomy collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['VocZooTaxonomy.jsonld'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_vocabularyzootaxonomies_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description VocZooTaxonomy identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description VocZooTaxonomy resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['VocZooTaxonomy.jsonld']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdzoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[endsPreserved]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        /**
         * @description Search ZooBone records. Splits input by non-word characters and uses first two chunks. Numeric chunks match the end of ID (cast as string), non-numeric chunks match the end of site code. Multiple chunks are combined with AND.
         * @example MO 123
         */
        search?: string
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        side?: string
        'side[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
        /**
         * @description Filter by bitwise AND operation - all specified bits must be set
         * @example 5
         */
        'endsPreserved[and]'?: number
        /**
         * @description Filter by bitwise AND operation - any of the specified bits must be set
         * @example 3
         */
        'endsPreserved[any]'?: number
      }
      header?: never
      path: {
        /** @description ZooBone identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooBone.jsonld-zoo_bone.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazoobones_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[endsPreserved]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        /**
         * @description Search ZooBone records. Splits input by non-word characters and uses first two chunks. Numeric chunks match the end of ID (cast as string), non-numeric chunks match the end of site code. Multiple chunks are combined with AND.
         * @example MO 123
         */
        search?: string
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        part?: string
        'part[]'?: string[]
        side?: string
        'side[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
        'exists[part]'?: boolean
        /**
         * @description Filter by bitwise AND operation - all specified bits must be set
         * @example 5
         */
        'endsPreserved[and]'?: number
        /**
         * @description Filter by bitwise AND operation - any of the specified bits must be set
         * @example 3
         */
        'endsPreserved[any]'?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooBone.jsonld-zoo_bone.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazoobones_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ZooBone resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.create']
      }
    }
    responses: {
      /** @description ZooBone resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datazoobones_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazoobones_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooBone resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazoobones_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooBone identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated ZooBone resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['ZooBone-zoo_bone.create']
      }
    }
    responses: {
      /** @description ZooBone resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooBone.jsonld-zoo_bone.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datastratigraphic_units_parentIdzooteeth_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[connected]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        /**
         * @description Search ZooBone records. Splits input by non-word characters and uses first two chunks. Numeric chunks match the end of ID (cast as string), non-numeric chunks match the end of site code. Multiple chunks are combined with AND.
         * @example MO 123
         */
        search?: string
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        side?: string
        'side[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        connected?: boolean
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
      }
      header?: never
      path: {
        /** @description ZooTooth identifier */
        parentId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooTooth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooTooth.jsonld-zoo_tooth.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazooteeth_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number
        /** @description The number of items per page */
        itemsPerPage?: number
        'order[id]'?: 'asc' | 'desc'
        'order[stratigraphicUnit.site.code]'?: 'asc' | 'desc'
        'order[taxonomy.value]'?: 'asc' | 'desc'
        'order[taxonomy.vernacularName]'?: 'asc' | 'desc'
        'order[taxonomy.family]'?: 'asc' | 'desc'
        'order[taxonomy.class]'?: 'asc' | 'desc'
        'order[element.value]'?: 'asc' | 'desc'
        'order[connected]'?: 'asc' | 'desc'
        'order[side]'?: 'asc' | 'desc'
        /**
         * @description Search ZooBone records. Splits input by non-word characters and uses first two chunks. Numeric chunks match the end of ID (cast as string), non-numeric chunks match the end of site code. Multiple chunks are combined with AND.
         * @example MO 123
         */
        search?: string
        'stratigraphicUnit.site'?: string
        'stratigraphicUnit.site[]'?: string[]
        stratigraphicUnit?: string
        'stratigraphicUnit[]'?: string[]
        taxonomy?: string
        'taxonomy[]'?: string[]
        element?: string
        'element[]'?: string[]
        side?: string
        'side[]'?: string[]
        'taxonomy.family'?: string
        'taxonomy.family[]'?: string[]
        'taxonomy.class'?: string
        'taxonomy.class[]'?: string[]
        'taxonomy.vernacularName'?: string
        'stratigraphicUnit.number[between]'?: string
        'stratigraphicUnit.number[gt]'?: string
        'stratigraphicUnit.number[gte]'?: string
        'stratigraphicUnit.number[lt]'?: string
        'stratigraphicUnit.number[lte]'?: string
        'stratigraphicUnit.year[between]'?: string
        'stratigraphicUnit.year[gt]'?: string
        'stratigraphicUnit.year[gte]'?: string
        'stratigraphicUnit.year[lt]'?: string
        'stratigraphicUnit.year[lte]'?: string
        connected?: boolean
        'exists[notes]'?: boolean
        'exists[element]'?: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooTooth collection */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': {
            member: components['schemas']['ZooTooth.jsonld-zoo_tooth.acl.read'][]
            totalItems?: number
            /** @example {
             *       "@id": "string",
             *       "type": "string",
             *       "first": "string",
             *       "last": "string",
             *       "previous": "string",
             *       "next": "string"
             *     } */
            view?: {
              /** Format: iri-reference */
              '@id': Iri
              '@type': string
              /** Format: iri-reference */
              first?: string
              /** Format: iri-reference */
              last?: string
              /** Format: iri-reference */
              previous?: string
              /** Format: iri-reference */
              next?: string
            }
            search?: {
              '@type': string
              template?: string
              variableRepresentation?: string
              mapping?: {
                '@type': string
                variable?: string
                property?: string | null
                required?: boolean
              }[]
            }
          }
        }
      }
    }
  }
  api_datazooteeth_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description The new ZooTooth resource */
    requestBody: {
      content: {
        'application/ld+json': components['schemas']['ZooTooth.jsonld-zoo_tooth.create']
      }
    }
    responses: {
      /** @description ZooTooth resource created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooTooth.jsonld-zoo_tooth.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
  api_datazooteeth_id_get: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooTooth resource */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooTooth.jsonld-zoo_tooth.acl.read']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazooteeth_id_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description ZooTooth resource deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
    }
  }
  api_datazooteeth_id_patch: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ZooTooth identifier */
        id: string
      }
      cookie?: never
    }
    /** @description The updated ZooTooth resource */
    requestBody: {
      content: {
        'application/merge-patch+json': components['schemas']['ZooTooth-zoo_tooth.create']
      }
    }
    responses: {
      /** @description ZooTooth resource updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ZooTooth.jsonld-zoo_tooth.acl.read']
        }
      }
      /** @description Invalid input */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['Error.jsonld']
          'application/problem+json': components['schemas']['Error']
          'application/json': components['schemas']['Error']
        }
      }
      /** @description An error occurred */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/ld+json': components['schemas']['ConstraintViolation.jsonld-jsonld']
          'application/problem+json': components['schemas']['ConstraintViolation-json']
          'application/json': components['schemas']['ConstraintViolation-json']
        }
      }
    }
  }
}
